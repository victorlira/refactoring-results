List(Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>(),355,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>(), 355)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>,$stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>(),459,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>(), 459)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack16 = this.<org.openpnp.model.Location: double rotation>,352,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack16 = this.<org.openpnp.model.Location: double rotation>, 352)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,rotation := @parameter4: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>,$stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>(),459,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>(), 459)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack16 = this.<org.openpnp.model.Location: double rotation>,352,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack16 = this.<org.openpnp.model.Location: double rotation>, 352)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,rotation := @parameter4: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack25 = this.<org.openpnp.model.Length: double value>,125,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack25 = this.<org.openpnp.model.Length: double value>, 125)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack25 / 1000.0,125,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack25 / 1000.0, 125)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack15 = $stack19,-1,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = this.<org.openpnp.model.Length: double value>,107,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = this.<org.openpnp.model.Length: double value>, 107)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack39 = mm * 1000.0,151,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>,$stack1 = this.<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location location>,16,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(),2070,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2070)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>,newLocation := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, otherFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(newLocation#3, ocrPart, this), 2071)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>,newTransform := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(cloneLocationSettings, cloneTapeSettings, clonePushPullSettings, cloneVisionSettings, templateFeeder), 1903) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>($stack6, 0, 1, 1, templateFeeder), 1971)) => Node(<org.openpnp.model.Location: double getRotation()>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: double getRotation()>,$stack1 = this.<org.openpnp.model.Location: double rotation>,82,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,rotation := @parameter4: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack39 = mm * 1000.0,151,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack58 = this.<org.openpnp.model.Length: double value>,113,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack58 = this.<org.openpnp.model.Length: double value>, 113)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack25 = this.<org.openpnp.model.Length: double value>,125,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack25 = this.<org.openpnp.model.Length: double value>, 125)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack25 / 1000.0,125,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack25 / 1000.0, 125)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack41 = mm * 39.37007874015748,148,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack41 = mm * 39.37007874015748, 148)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>(),355,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>(), 355)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack57 = this.<org.openpnp.model.Length: double value>,116,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack57 = this.<org.openpnp.model.Length: double value>, 116)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack19 = this.<org.openpnp.model.Location: double z>,356,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack19 = this.<org.openpnp.model.Location: double z>, 356)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack15 = $stack19,-1,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack59 = this.<org.openpnp.model.Length: double value>,110,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack48 = mm / 1000.0,139,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack48 = mm / 1000.0, 139)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack59 = this.<org.openpnp.model.Length: double value>,110,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>,$stack3 = this.<org.openpnp.model.Location: double z>,186,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, $stack3 = this.<org.openpnp.model.Location: double z>, 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack46 = mm * 0.03937007874015748,142,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack46 = mm * 0.03937007874015748, 142)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack41 = mm * 39.37007874015748,148,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack41 = mm * 39.37007874015748, 148)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack19 = this.<org.openpnp.model.Location: double z>,356,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack19 = this.<org.openpnp.model.Location: double z>, 356)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack15 = $stack19,-1,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = this.<org.openpnp.model.Length: double value>,107,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = this.<org.openpnp.model.Length: double value>, 107)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack39 = mm * 1000.0,151,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack39 = mm * 1000.0,151,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>,$stack1 = this.<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location location>,16,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(),2070,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2070)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>,newLocation := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, otherFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(newLocation#3, ocrPart, this), 2071)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>,newTransform := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(cloneLocationSettings, cloneTapeSettings, clonePushPullSettings, cloneVisionSettings, templateFeeder), 1903) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>($stack6, 0, 1, 1, templateFeeder), 1971)) => Node(<org.openpnp.model.Location: double getRotation()>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: double getRotation()>,$stack1 = this.<org.openpnp.model.Location: double rotation>,82,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,rotation := @parameter4: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack50 = mm / 10.0,136,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack50 = mm / 10.0, 136)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack15 = $stack19,-1,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>,$stack3 = this.<org.openpnp.model.Location: double z>,186,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, $stack3 = this.<org.openpnp.model.Location: double z>, 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack46 = mm * 0.03937007874015748,142,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack46 = mm * 0.03937007874015748, 142)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack48 = mm / 1000.0,139,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack48 = mm / 1000.0, 139)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack57 = this.<org.openpnp.model.Length: double value>,116,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack57 = this.<org.openpnp.model.Length: double value>, 116)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack58 = this.<org.openpnp.model.Length: double value>,113,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack58 = this.<org.openpnp.model.Length: double value>, 113)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack53 = $stack52 / 1000.0,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack53 * 25.4,122,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack44 = $stack43 * 12.0,145,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack5 = new org.openpnp.model.Location,352,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1580,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1580)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1587,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1587)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)) => Node(<org.openpnp.model.Location: double getRotation()>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: double getRotation()>,$stack1 = this.<org.openpnp.model.Location: double rotation>,82,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,rotation := @parameter4: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2303,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)))

List(Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack50 = mm / 10.0,136,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack50 = mm / 10.0, 136)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(),93,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,z := @parameter3: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack14 = $stack12 - $stack13,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack5 = new org.openpnp.model.Location,352,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1580,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1580)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1587,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1587)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)) => Node(<org.openpnp.model.Location: double getRotation()>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: double getRotation()>,$stack1 = this.<org.openpnp.model.Location: double rotation>,82,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack9 = this.<org.openpnp.model.Location: double rotation>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,rotation := @parameter4: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double rotation> = rotation,64,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double z> = z,63,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack12 = this.<org.openpnp.model.Location: double z>,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack14 = $stack12 * $stack13,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>,$stack15 = $stack11 + $stack14,314,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492) => (<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>,$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(),1085,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack4 = this.<org.openpnp.model.Location: double x>,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack6 = $stack4 - $stack5,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18),262,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2297,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,l := @parameter0: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>,301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,units := @parameter0: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>,$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(),92,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221) => (<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getY()>,$stack1 = this.<org.openpnp.model.Location: double y>,74,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack11 = $stack9 - $stack10,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15),198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1570,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1210,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2296,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,222,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>,$stack12 = this.<org.openpnp.model.Location: double x>,376,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>,$stack6 = this.<org.openpnp.model.Location: double x>,198,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301) => (<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack5 = this.<org.openpnp.model.Location: double x>,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack6 = $stack5 - x,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack11 = $stack7 + $stack10,120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116) => (<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>,$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11),120,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508) => (<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)) => Node(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5),116,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack204 = $stack203 / 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204),1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack206 = (double) $stack205,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,b#31 = $stack206 * 4.0,1543,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack211 = b#31 * 0.5,1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213),1546,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1547,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>,1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244),1564,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,$stack10 = this.<org.openpnp.model.Location: double rotation>,332,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>,specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10),333,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281) => (<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>,1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122),1574,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null),1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>,this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127,1575,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack50 = mm / 10.0,136,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack50 = mm / 10.0, 136)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,specialinvoke $stack49.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack50, units),136,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack49.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack50, units), 136)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(),354,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(), 354)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack59 = this.<org.openpnp.model.Length: double value>,110,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack58 = this.<org.openpnp.model.Length: double value>,113,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack58 = this.<org.openpnp.model.Length: double value>, 113)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack58 * 1000.0,113,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack58 * 1000.0, 113)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack39 = mm * 1000.0,151,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,specialinvoke $stack38.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack39, units),151,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack38.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack39, units), 151)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack59 = this.<org.openpnp.model.Length: double value>,110,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,specialinvoke $stack51.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>(mm, units),133,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack51.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>(mm, units), 133)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.model.Length: boolean isInitialized()>,$stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(),340,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.model.Length: boolean isInitialized()>,$stack2 = $stack1 cmpl 0.0,340,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack2 = $stack1 cmpl 0.0, 340)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack25 = this.<org.openpnp.model.Length: double value>,125,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack25 = this.<org.openpnp.model.Length: double value>, 125)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack25 / 1000.0,125,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack25 / 1000.0, 125)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack59 = this.<org.openpnp.model.Length: double value>,110,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack57 = this.<org.openpnp.model.Length: double value>,116,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack57 = this.<org.openpnp.model.Length: double value>, 116)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack57 * 25.4,116,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack57 * 25.4, 116)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(),354,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(), 354)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,y := @parameter2: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double y> = y,62,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack8 = this.<org.openpnp.model.Location: double y>,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack8 = this.<org.openpnp.model.Location: double y>, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack10 = $stack8 - $stack9,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack10 = $stack8 - $stack9, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack11 = staticinvoke <java.lang.Math: double pow(double,double)>($stack10, 2.0),126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack11 = staticinvoke <java.lang.Math: double pow(double,double)>($stack10, 2.0), 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack12 = $stack7 + $stack11,126,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack17 = $stack12 + $stack16,125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302) => (<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)) => Node(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>,$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17),125,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l),302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>,norm = 1.0 / $stack9,302,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441) => (<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,x := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>,$stack12 = x * $stack11,261,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279) => (<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,x := @parameter1: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)) => Node(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>,this.<org.openpnp.model.Location: double x> = x,61,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356) => (<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack52 = this.<org.openpnp.model.Length: double value>,122,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack48 = mm / 1000.0,139,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack48 = mm / 1000.0, 139)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel detectedOcrModel>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack75 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2324)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack79 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2325,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack79 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2325)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,ocrModel := @parameter0: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,ocrPart = staticinvoke <org.openpnp.util.OcrUtils: org.openpnp.model.Part identifyDetectedPart(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.spi.Feeder)>(ocrModel, this),2039,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, ocrPart = staticinvoke <org.openpnp.util.OcrUtils: org.openpnp.model.Part identifyDetectedPart(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.spi.Feeder)>(ocrModel, this), 2039)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>,ocrPart := @parameter0: org.openpnp.model.Part,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>,compatiblePart := @parameter0: org.openpnp.model.Part,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>,templateFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder getTemplateFeeder(org.openpnp.model.Part)>(compatiblePart),1894,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, templateFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder getTemplateFeeder(org.openpnp.model.Part)>(compatiblePart), 1894)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>,templateFeeder := @parameter4: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(cloneLocationSettings, cloneTapeSettings, clonePushPullSettings, cloneVisionSettings, templateFeeder), 1903)) => Node(<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>,this := @this: org.openpnp.machine.reference.ReferenceFeeder,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)) => Node(<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>,$stack1 = this.<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location location>,16,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack41 = mm * 39.37007874015748,148,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack41 = mm * 39.37007874015748, 148)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,specialinvoke $stack40.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack41, units),148,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack40.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack41, units), 148)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,$stack6 = virtualinvoke this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit getUnits()>(),99,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit getUnits()>(), 99)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,units := @parameter1: org.openpnp.model.LengthUnit,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: org.openpnp.model.LengthUnit units> = units,44,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: org.openpnp.model.LengthUnit units> = units, 44)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack46 = mm * 0.03937007874015748,142,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack46 = mm * 0.03937007874015748, 142)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)) => Node(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>,$stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(),354,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(), 354)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: double getValue()>,$stack1 = this.<org.openpnp.model.Length: double value>,85,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454) => (<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = this.<org.openpnp.model.Length: double value>,107,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = this.<org.openpnp.model.Length: double value>, 107)))

List(Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>,$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>,1210,SourceNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)) => Node(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>,calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52),2301,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,this := @this: org.openpnp.model.Location,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)) => Node(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>,distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location),98,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577) => (<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,value := @parameter0: double,-1,SimpleNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)) => Node(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>,this.<org.openpnp.model.Length: double value> = value,43,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454) => (<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186) => (<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack55 = this.<org.openpnp.model.Length: double value>,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack56 = $stack55 * 25.4,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,mm = $stack56 * 12.0,119,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)) => Node(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>,$stack43 = mm * 0.03937007874015748,145,SinkNode, path: (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274) => (<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459) => (<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353) => (<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)))

