[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack59 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "110"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack46 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "142"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack46 = mm * 0.03937007874015748, 142)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack25 = this.<org.openpnp.model.Length: double value>, 125)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack25 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack25 / 1000.0, 125)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack25 = this.<org.openpnp.model.Length: double value>, 125)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack25 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack25 / 1000.0, 125)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "355"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>(), 355)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack39 = mm * 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "151"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.ReferenceFeeder",
  "method": "<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>",
  "line": "16"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2070"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2070)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "newLocation := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, otherFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(newLocation#3, ocrPart, this), 2071)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "newTransform := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(cloneLocationSettings, cloneTapeSettings, clonePushPullSettings, cloneVisionSettings, templateFeeder), 1903)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>($stack6, 0, 1, 1, templateFeeder), 1971)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "82"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "rotation := @parameter4: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = $stack19",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "352"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1580"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1580)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1587"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1587)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "82"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "rotation := @parameter4: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>",
  "line": "459"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>(), 459)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "352"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack16 = this.<org.openpnp.model.Location: double rotation>, 352)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "rotation := @parameter4: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack48 = mm / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "139"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack48 = mm / 1000.0, 139)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "356"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack19 = this.<org.openpnp.model.Location: double z>, 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = $stack19",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack58 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "113"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack58 = this.<org.openpnp.model.Length: double value>, 113)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>",
  "line": "186"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, $stack3 = this.<org.openpnp.model.Location: double z>, 186)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack59 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "110"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack39 = mm * 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "151"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack50 = mm / 10.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "136"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack50 = mm / 10.0, 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = $stack19",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack57 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack57 = this.<org.openpnp.model.Length: double value>, 116)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>",
  "line": "459"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack6 = interfaceinvoke camera.<org.openpnp.spi.Camera: org.openpnp.model.Location getLocation()>(), 459)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "352"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack16 = this.<org.openpnp.model.Location: double rotation>, 352)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "rotation := @parameter4: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack57 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack57 = this.<org.openpnp.model.Length: double value>, 116)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack48 = mm / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "139"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack48 = mm / 1000.0, 139)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "356"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack19 = this.<org.openpnp.model.Location: double z>, 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = $stack19",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = $stack19, -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "352"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1580"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack138 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1580)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1587"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack161 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1587)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "82"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "rotation := @parameter4: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack41 = mm * 39.37007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "148"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack41 = mm * 39.37007874015748, 148)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "355"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: double getValue()>(), 355)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 * $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack14 = $stack12 * $stack13, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = $stack11 + $stack14",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>",
  "line": "314"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack415 = virtualinvoke $stack414.<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>(diameter#16), 1492)","(<org.openpnp.model.Location: org.openpnp.model.Length dotProduct(org.openpnp.model.Location)>, $stack15 = $stack11 + $stack14, 314)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack12 = virtualinvoke $stack9.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack13 = virtualinvoke $stack12.<org.openpnp.model.Length: double getValue()>(), 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getY()>",
  "line": "74"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack10 = virtualinvoke l#2.<org.openpnp.model.Location: double getY()>(), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack9 - $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack11 = $stack9 - $stack10, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack50 = mm / 10.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "136"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack50 = mm / 10.0, 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack46 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "142"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack46 = mm * 0.03937007874015748, 142)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>",
  "line": "186"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, $stack3 = this.<org.openpnp.model.Location: double z>, 186)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack58 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "113"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack58 = this.<org.openpnp.model.Length: double value>, 113)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack53 = $stack52 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack53 = $stack52 / 1000.0, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "mm = $stack53 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack53 * 25.4, 122)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack44 = $stack43 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack44 = $stack43 * 12.0, 145)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.ReferenceFeeder",
  "method": "<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>",
  "line": "16"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2070"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, newLocation#3 = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2070)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "newLocation := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, otherFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder createNewAtLocation(org.openpnp.model.Location,org.openpnp.model.Part,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(newLocation#3, ocrPart, this), 2071)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "newTransform := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(cloneLocationSettings, cloneTapeSettings, clonePushPullSettings, cloneVisionSettings, templateFeeder), 1903)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setFeederLocation(org.openpnp.model.Location,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>($stack6, 0, 1, 1, templateFeeder), 1971)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getRotation()>",
  "line": "82"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack17 = virtualinvoke this.<org.openpnp.model.Location: double getRotation()>(), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack9 = this.<org.openpnp.model.Location: double rotation>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "rotation := @parameter4: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double rotation> = rotation",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "64"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double rotation> = rotation, 64)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack41 = mm * 39.37007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "148"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack41 = mm * 39.37007874015748, 148)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "mm = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "107"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = this.<org.openpnp.model.Length: double value>, 107)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack39 = mm * 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "151"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "mm = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "107"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = this.<org.openpnp.model.Length: double value>, 107)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack39 = mm * 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "151"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>",
  "line": "1085"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, specialinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>(resultMat, $stack72), 1606)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: void drawPartNumbers(org.opencv.core.Mat,java.awt.Color)>, $stack64 = virtualinvoke $stack63.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>($stack62, $stack61), 1317)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>, $stack17 = virtualinvoke $stack16.<org.openpnp.model.Length: double getValue()>(), 1085)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack4 = this.<org.openpnp.model.Location: double x>, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack4 - $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack6 = $stack4 - $stack5, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "262"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, specialinvoke $stack9.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack10, $stack12, $stack14, $stack16, $stack18), 262)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole2Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$600(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2297"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "92"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack15 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 92)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack13 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack5 = this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit units>, 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter0: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack17 = virtualinvoke $stack14.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>(units), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "93"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, l#2 = virtualinvoke l.<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>($stack2), 221)","(<org.openpnp.model.Location: org.openpnp.model.Location convertToUnits(org.openpnp.model.LengthUnit)>, $stack18 = virtualinvoke $stack17.<org.openpnp.model.Length: double getValue()>(), 93)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "z := @parameter3: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double z> = z",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "63"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double z> = z, 63)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double z>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack12 = this.<org.openpnp.model.Location: double z>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack14 = $stack12 - $stack13",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack14 = $stack12 - $stack13, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, specialinvoke $stack4.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack5, $stack8, $stack11, $stack14, $stack15), 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack220 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole2Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1570"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack115 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1570)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2296)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "runningHole1Location = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$500(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2296"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>",
  "line": "222"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack25 = virtualinvoke runningHole1Location.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>(runningHole2Location), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 222)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>",
  "line": "376"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack28 = virtualinvoke $stack26.<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>($stack27, 0, 0, 1, 0), 2280)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(org.openpnp.model.Location,boolean,boolean,boolean,boolean)>, $stack12 = this.<org.openpnp.model.Location: double x>, 376)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>",
  "line": "198"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, vector = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>(this), 301)","(<org.openpnp.model.Location: org.openpnp.model.Location subtract(org.openpnp.model.Location)>, $stack6 = this.<org.openpnp.model.Location: double x>, 198)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack5 = this.<org.openpnp.model.Location: double x>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack5 = this.<org.openpnp.model.Location: double x>, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = $stack5 - x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack6 = $stack5 - x, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack7 = staticinvoke <java.lang.Math: double pow(double,double)>($stack6, 2.0), 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = $stack7 + $stack10",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)","(<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>, $stack11 = $stack7 + $stack10, 120)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = staticinvoke <java.lang.Math: double sqrt(double)>($stack11)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>",
  "line": "120"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)","(<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(double,double)>($stack4, $stack5)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = virtualinvoke a#37.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack344), 1508)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack203 = virtualinvoke $stack202.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>($stack201), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack204 = $stack203 / 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack204 = $stack203 / 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack205 = staticinvoke <java.lang.Math: long round(double)>($stack204), 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack206 = (double) $stack205",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack206 = (double) $stack205, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "b#31 = $stack206 * 4.0",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1543"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, b#31 = $stack206 * 4.0, 1543)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack211 = b#31 * 0.5",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack211 = b#31 * 0.5, 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack213 = virtualinvoke diameter#16.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>($stack212, $stack211, 0.0, 0.0), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1546"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack214 = virtualinvoke a#37.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack213), 1546)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1547"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack217 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1547)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack243 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedHole1Location>, 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1564"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack245 = virtualinvoke $stack243.<org.openpnp.model.Location: org.openpnp.model.Location add(org.openpnp.model.Location)>($stack244), 1564)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.openpnp.model.Location: double rotation>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "332"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, $stack10 = this.<org.openpnp.model.Location: double rotation>, 332)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>",
  "line": "333"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, midPoint = virtualinvoke $stack28.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, null, $stack36), 2281)","(<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack6, $stack7, $stack8, $stack9, $stack10), 333)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack122 = this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedPickLocation>, 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1574"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack123 = virtualinvoke $stack121.<org.openpnp.model.Location: org.openpnp.model.Location subtractWithRotation(org.openpnp.model.Location)>($stack122), 1574)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack127 = virtualinvoke $stack123.<org.openpnp.model.Location: org.openpnp.model.Location derive(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>(null, null, $stack126, null), 1575)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>",
  "line": "1575"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset> = $stack127, 1575)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2303"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack57 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2303)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "354"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(), 354)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack8 = this.<org.openpnp.model.Location: double y>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack8 = this.<org.openpnp.model.Location: double y>, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = $stack8 - $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack10 = $stack8 - $stack9, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack11 = staticinvoke <java.lang.Math: double pow(double,double)>($stack10, 2.0)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack11 = staticinvoke <java.lang.Math: double pow(double,double)>($stack10, 2.0), 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = $stack7 + $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "126"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack12 = $stack7 + $stack11, 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack17 = $stack12 + $stack16",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)","(<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>, $stack17 = $stack12 + $stack16, 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack18 = staticinvoke <java.lang.Math: double sqrt(double)>($stack17)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, $stack9 = virtualinvoke this.<org.openpnp.model.Location: double getXyzDistanceTo(org.openpnp.model.Location)>(l), 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "norm = 1.0 / $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>",
  "line": "302"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, diameter#16 = virtualinvoke aLocation.<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>(bLocation), 1441)","(<org.openpnp.model.Location: org.openpnp.model.Location unitVectorTo(org.openpnp.model.Location)>, norm = 1.0 / $stack9, 302)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack12 = x * $stack11",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>",
  "line": "261"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack26 = virtualinvoke $stack25.<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>(0.5, 0.5, 0.0, 0.0), 2279)","(<org.openpnp.model.Location: org.openpnp.model.Location multiply(double,double,double,double)>, $stack12 = x * $stack11, 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "x := @parameter1: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double x> = x",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "61"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double x> = x, 61)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "142"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack46 = mm * 0.03937007874015748, 142)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack51.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>(mm, units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "133"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack51.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>(mm, units), 133)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack48 = mm / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "139"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack48 = mm / 1000.0, 139)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "110"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack57 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack57 = this.<org.openpnp.model.Length: double value>, 116)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack57 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "116"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack57 * 25.4, 116)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack43 = mm * 0.03937007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "145"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack43 = mm * 0.03937007874015748, 145)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: boolean isInitialized()>",
  "line": "340"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = $stack1 cmpl 0.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: boolean isInitialized()>",
  "line": "340"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack2 = $stack1 cmpl 0.0, 340)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel detectedOcrModel>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack75 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2324)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack79 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2325"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack79 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel access$800(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2325)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ocrModel := @parameter0: org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ocrPart = staticinvoke <org.openpnp.util.OcrUtils: org.openpnp.model.Part identifyDetectedPart(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.spi.Feeder)>(ocrModel, this)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2039"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, ocrPart = staticinvoke <org.openpnp.util.OcrUtils: org.openpnp.model.Part identifyDetectedPart(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.spi.Feeder)>(ocrModel, this), 2039)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ocrPart := @parameter0: org.openpnp.model.Part",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "compatiblePart := @parameter0: org.openpnp.model.Part",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "templateFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder getTemplateFeeder(org.openpnp.model.Part)>(compatiblePart)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>",
  "line": "1894"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, templateFeeder = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder getTemplateFeeder(org.openpnp.model.Part)>(compatiblePart), 1894)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "templateFeeder := @parameter4: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>($stack79, ocrAction, ocrStop, report), 2325)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void triggerOcrAction(org.openpnp.vision.pipeline.stages.SimpleOcr$OcrModel,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>(ocrPart, 1), 2044)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void setOcrDetectedPart(org.openpnp.model.Part,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>(ocrPart, 1, 1, 1, 1), 2173)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void smartClone(org.openpnp.model.Part,boolean,boolean,boolean,boolean)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void cloneFeederSettings(boolean,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder)>(cloneLocationSettings, cloneTapeSettings, clonePushPullSettings, cloneVisionSettings, templateFeeder), 1903)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.machine.reference.ReferenceFeeder",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.ReferenceFeeder",
  "method": "<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location location>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.ReferenceFeeder",
  "method": "<org.openpnp.machine.reference.ReferenceFeeder: org.openpnp.model.Location getLocation()>",
  "line": "16"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, runningPickLocation = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getLocation()>(), 2272)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack39 = mm * 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "151"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack39 = mm * 1000.0, 151)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack38.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack39, units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "151"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack38.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack39, units), 151)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = virtualinvoke this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit getUnits()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "99"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, $stack6 = virtualinvoke this.<org.openpnp.model.Location: org.openpnp.model.LengthUnit getUnits()>(), 99)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "units := @parameter1: org.openpnp.model.LengthUnit",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: org.openpnp.model.LengthUnit units> = units",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "44"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: org.openpnp.model.LengthUnit units> = units, 44)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack50 = mm / 10.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "136"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack50 = mm / 10.0, 136)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack49.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack50, units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "136"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack49.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack50, units), 136)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "354"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(), 354)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "y := @parameter2: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Location: double y> = y",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>",
  "line": "62"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, specialinvoke $stack5.<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>($stack7, $stack9, $stack12, $stack15, $stack16), 356)","(<org.openpnp.model.Location: void <init>(org.openpnp.model.LengthUnit,double,double,double,double)>, this.<org.openpnp.model.Location: double y> = y, 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "110"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: double getValue()>",
  "line": "85"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack15 = virtualinvoke $stack14.<org.openpnp.model.Length: boolean isInitialized()>(), 454)","(<org.openpnp.model.Length: boolean isInitialized()>, $stack1 = virtualinvoke this.<org.openpnp.model.Length: double getValue()>(), 340)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>()",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>",
  "line": "354"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack12 = virtualinvoke $stack11.<org.openpnp.model.Length: double getValue()>(), 354)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = $stack55 * 25.4",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack56 = $stack55 * 25.4, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack56 * 12.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack56 * 12.0, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = mm * 39.37007874015748",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "148"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack41 = mm * 39.37007874015748, 148)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack40.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack41, units)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "148"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, specialinvoke $stack40.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack41, units), 148)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "107"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = this.<org.openpnp.model.Length: double value>, 107)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "110"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack59 = this.<org.openpnp.model.Length: double value>, 110)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack58 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "113"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack58 = this.<org.openpnp.model.Length: double value>, 113)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack58 * 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "113"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack58 * 1000.0, 113)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location calibratedVisionOffset>",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>",
  "line": "1210"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, $stack52 = staticinvoke <org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.model.Location access$700(org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures)>(feature), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52)",
"location": {
  "file": "",
  "class": "org.openpnp.machine.reference.feeder.ReferencePushPullFeeder",
  "method": "<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>",
  "line": "2301"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, calibratedPick1Location = virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: org.openpnp.model.Location getPickLocation(long,org.openpnp.model.Location)>(1L, $stack52), 2301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.openpnp.model.Location",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location)",
"location": {
  "file": "",
  "class": "org.openpnp.model.Location",
  "method": "<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>",
  "line": "98"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, feature = virtualinvoke $stack44.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>(), 2295)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures: org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$FindFeatures invoke()>, $stack135 = virtualinvoke $stack134.<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>($stack133), 1577)","(<org.openpnp.model.Location: org.openpnp.model.Length getLinearLengthTo(org.openpnp.model.Location)>, distance = virtualinvoke this.<org.openpnp.model.Location: double getLinearDistanceTo(org.openpnp.model.Location)>(location), 98)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: double",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.openpnp.model.Length: double value> = value",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>",
  "line": "43"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack14 = virtualinvoke $stack13.<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>(), 454)","(<org.openpnp.model.Location: org.openpnp.model.Length getLengthZ()>, specialinvoke $stack1.<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>($stack3, $stack2), 186)","(<org.openpnp.model.Length: void <init>(double,org.openpnp.model.LengthUnit)>, this.<org.openpnp.model.Length: double value> = value, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "119"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack55 = this.<org.openpnp.model.Length: double value>, 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "122"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack52 = this.<org.openpnp.model.Length: double value>, 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = this.<org.openpnp.model.Length: double value>",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, $stack25 = this.<org.openpnp.model.Length: double value>, 125)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "mm = $stack25 / 1000.0",
"location": {
  "file": "",
  "class": "org.openpnp.model.Length",
  "method": "<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>",
  "line": "125"
},
"stackTrace": ["(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void performVisionOperations(org.openpnp.spi.Camera,org.openpnp.vision.pipeline.CvPipeline,boolean,boolean,boolean,org.openpnp.machine.reference.feeder.ReferencePushPullFeeder$OcrWrongPartAction,boolean,java.lang.StringBuilder)>, virtualinvoke this.<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>(camera), 2274)","(<org.openpnp.machine.reference.feeder.ReferencePushPullFeeder: void ensureCameraZ(org.openpnp.spi.Camera)>, $stack11 = virtualinvoke $stack6.<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>(null, null, $stack10, null), 459)","(<org.openpnp.model.Location: org.openpnp.model.Location deriveLengths(org.openpnp.model.Length,org.openpnp.model.Length,org.openpnp.model.Length,java.lang.Double)>, $stack8 = virtualinvoke x.<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>($stack6), 353)","(<org.openpnp.model.Length: org.openpnp.model.Length convertToUnits(org.openpnp.model.LengthUnit)>, mm = $stack25 / 1000.0, 125)"]
}]
}
}

]
