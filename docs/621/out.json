[
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "command - command",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "command = (com.rabbitmq.client.Command) reason",
				"location": {
					"file": "",
					"class": "net.jodah.lyra.internal.util.Exceptions",
					"method": "isRetryable",
					"line": 99
				},
				"stackTrace": [{
	"class": "net.jodah.lyra.internal.RetryableResource",
	"method": "callWithRetries",
	"line": 60
},{
	"class": "net.jodah.lyra.internal.util.Exceptions",
	"method": "isRetryable",
	"line": 45
},{
	"class": "net.jodah.lyra.internal.util.Exceptions",
	"method": "isRetryable",
	"line": 99
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "command = (com.rabbitmq.client.Command) reason",
				"location": {
					"file": "",
					"class": "net.jodah.lyra.internal.util.Exceptions",
					"method": "isRetryable",
					"line": 99
				},
				"stackTrace": [{
	"class": "net.jodah.lyra.internal.RetryableResource",
	"method": "callWithRetries",
	"line": 60
},{
	"class": "net.jodah.lyra.internal.util.Exceptions",
	"method": "isRetryable",
	"line": 45
},{
	"class": "net.jodah.lyra.internal.util.Exceptions",
	"method": "isRetryable",
	"line": 99
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "recovery - recovery",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "recovery = $stack15",
				"location": {
					"file": "",
					"class": "net.jodah.lyra.internal.RetryableResource",
					"method": "callWithRetries",
					"line": 42
				},
				"stackTrace": [{
	"class": "net.jodah.lyra.internal.RetryableResource",
	"method": "callWithRetries",
	"line": 42
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "recovery = $stack15",
				"location": {
					"file": "",
					"class": "net.jodah.lyra.internal.RetryableResource",
					"method": "callWithRetries",
					"line": 42
				},
				"stackTrace": [{
	"class": "net.jodah.lyra.internal.RetryableResource",
	"method": "callWithRetries",
	"line": 42
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "withinMaxRetries - withinMaxRetries",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "withinMaxRetries = $stack16",
				"location": {
					"file": "",
					"class": "net.jodah.lyra.internal.RecurringStats",
					"method": "isPolicyExceeded",
					"line": 92
				},
				"stackTrace": [{
	"class": "net.jodah.lyra.internal.RetryableResource",
	"method": "callWithRetries",
	"line": 78
},{
	"class": "net.jodah.lyra.internal.RecurringStats",
	"method": "isPolicyExceeded",
	"line": 92
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "withinMaxRetries = $stack16",
				"location": {
					"file": "",
					"class": "net.jodah.lyra.internal.RecurringStats",
					"method": "isPolicyExceeded",
					"line": 92
				},
				"stackTrace": [{
	"class": "net.jodah.lyra.internal.RetryableResource",
	"method": "callWithRetries",
	"line": 78
},{
	"class": "net.jodah.lyra.internal.RecurringStats",
	"method": "isPolicyExceeded",
	"line": 92
}]
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringPolicy: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringPolicy",
  "method": "<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>(), 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>(), 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2, 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack14 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack15 >= $stack14 goto $stack16 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1), 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "80"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack10 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 80)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringPolicy",
  "method": "<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>",
  "line": "69"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack33 = virtualinvoke recurringPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack7 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>(), 34)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.jodah.lyra.util.Duration",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.util.Duration: java.util.concurrent.TimeUnit timeUnit>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack1 = this.<net.jodah.lyra.util.Duration: java.util.concurrent.TimeUnit timeUnit>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = e instanceof java.net.SocketTimeoutException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack2 = e instanceof java.net.SocketTimeoutException, 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack2 != 0 goto return 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "40"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringPolicy: int intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringPolicy",
  "method": "<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>",
  "line": "51"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>(), 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>(), 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = (double) $stack14",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack15 = (double) $stack14, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = 0L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "39"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5, 28)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "28"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5, 28)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "retryStats = $stack30",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RetryableResource",
  "method": "<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>",
  "line": "76"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.jodah.lyra.internal.RecurringStats",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = $stack1 + 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, $stack2 = $stack1 + 1, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: int attemptCount> = $stack2",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, this.<net.jodah.lyra.internal.RecurringStats: int attemptCount> = $stack2, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack15 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack15 >= $stack14 goto $stack16 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = 0L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "39"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5, 28)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "28"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5, 28)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>(), 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2, 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack14 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack15 >= $stack14 goto $stack16 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "30"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = -1L, 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = e instanceof com.rabbitmq.client.PossibleAuthenticationFailureException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "43"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack8 = e instanceof com.rabbitmq.client.PossibleAuthenticationFailureException, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto (branch)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "43"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "now = staticinvoke <java.lang.System: long nanoTime()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "72"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, now = staticinvoke <java.lang.System: long nanoTime()>(), 72)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "elapsedNanos = now - $stack12",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, elapsedNanos = now - $stack12, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = $stack13 - elapsedNanos",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack14 = $stack13 - elapsedNanos, 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14), 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16, 82)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack17 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "83"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack17 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 83)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringPolicy: int intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringPolicy",
  "method": "<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>",
  "line": "51"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>(), 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>(), 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = (double) $stack14",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack15 = (double) $stack14, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = -1.0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "18"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = -1.0, 18)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "retryStats = $stack30",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RetryableResource",
  "method": "<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>",
  "line": "76"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.jodah.lyra.internal.RecurringStats",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.jodah.lyra.internal.RecurringStats",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "elapsedNanos = now - $stack12",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, elapsedNanos = now - $stack12, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = $stack13 - elapsedNanos",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack14 = $stack13 - elapsedNanos, 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14), 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16, 82)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14), 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16, 82)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = $stack1 + 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, $stack2 = $stack1 + 1, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: int attemptCount> = $stack2",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, this.<net.jodah.lyra.internal.RecurringStats: int attemptCount> = $stack2, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack15 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack15 >= $stack14 goto $stack16 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack8 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = $stack7 - $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack10 = $stack7 - $stack8, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "80"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack10 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 80)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "withinMaxRetries = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, withinMaxRetries = $stack16, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if withinMaxRetries == 0 goto $stack6 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = -1.0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "18"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = -1.0, 18)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack11",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "35"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack11, 35)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "77"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack8 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 77)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "now = staticinvoke <java.lang.System: long nanoTime()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "72"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, now = staticinvoke <java.lang.System: long nanoTime()>(), 72)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "elapsedNanos = now - $stack12",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, elapsedNanos = now - $stack12, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = $stack13 - elapsedNanos",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack14 = $stack13 - elapsedNanos, 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14), 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16, 82)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = reason instanceof com.rabbitmq.client.Command",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack6 = reason instanceof com.rabbitmq.client.Command, 98)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, withinMaxRetries = $stack16, 92)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "withinMaxRetries = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, withinMaxRetries = $stack16, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if withinMaxRetries == 0 goto $stack6 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack11",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "35"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack11, 35)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "30"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = -1L, 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxInterval()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack16 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxInterval()>(), 41)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack17 = virtualinvoke $stack16.<net.jodah.lyra.util.Duration: long toNanos()>(), 41)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxInterval> = $stack17",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxInterval> = $stack17, 41)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = this.<net.jodah.lyra.internal.RecurringStats: long maxInterval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack24 = this.<net.jodah.lyra.internal.RecurringStats: long maxInterval>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long startTime>, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "elapsedNanos = now - $stack12",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "81"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, elapsedNanos = now - $stack12, 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = $stack13 - elapsedNanos",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack14 = $stack13 - elapsedNanos, 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14), 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16, 82)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = reason instanceof com.rabbitmq.client.Command",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack6 = reason instanceof com.rabbitmq.client.Command, 98)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "28"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5, 28)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "retryStats = $stack30",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RetryableResource",
  "method": "<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>",
  "line": "76"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.jodah.lyra.internal.RecurringStats",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack3 == -1 goto $stack16 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = e instanceof com.rabbitmq.client.AlreadyClosedException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "42"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack5 = e instanceof com.rabbitmq.client.AlreadyClosedException, 42)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 != 0 goto return 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "42"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack17 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "83"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack17 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 83)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringPolicy",
  "method": "<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>",
  "line": "69"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack33 = virtualinvoke recurringPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack7 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxDuration()>(), 34)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.jodah.lyra.util.Duration",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.util.Duration: java.util.concurrent.TimeUnit timeUnit>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack1 = this.<net.jodah.lyra.util.Duration: java.util.concurrent.TimeUnit timeUnit>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = $stack6 instanceof java.io.EOFException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack7 = $stack6 instanceof java.io.EOFException, 41)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack7 == 0 goto $stack8 = e instanceof com.rabbitmq.client.PossibleAuthenticationFailureException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1), 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack3 == -1 goto $stack16 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack16 = staticinvoke <java.lang.Math: long min(long,long)>($stack15, $stack14), 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "82"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack16, 82)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>(), 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = (double) $stack14",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack15 = (double) $stack14, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringPolicy: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringPolicy",
  "method": "<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>(), 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>(), 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2, 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack3 == -1 goto $stack16 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "77"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack8 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 77)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "28"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long interval> = $stack5, 28)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack18 = this.<net.jodah.lyra.internal.RecurringStats: long interval>, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "31"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack18, 31)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack19 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack2 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getMaxAttempts()>(), 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "27"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts> = $stack2, 27)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack3 == -1 goto $stack16 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack16 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxInterval()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack16 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: net.jodah.lyra.util.Duration getMaxInterval()>(), 41)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack17 = virtualinvoke $stack16.<net.jodah.lyra.util.Duration: long toNanos()>(), 41)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxInterval> = $stack17",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxInterval> = $stack17, 41)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = this.<net.jodah.lyra.internal.RecurringStats: long maxInterval>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack24 = this.<net.jodah.lyra.internal.RecurringStats: long maxInterval>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack14 = virtualinvoke retryPolicy.<net.jodah.lyra.internal.RecurringPolicy: int getIntervalMultiplier()>(), 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = (double) $stack14",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack15 = (double) $stack14, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier> = $stack15, 40)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack20 = this.<net.jodah.lyra.internal.RecurringStats: double intervalMultiplier>, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = $stack21 * $stack20",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack22 = $stack21 * $stack20, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = (long) $stack22",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack23 = (long) $stack22, 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, $stack25 = staticinvoke <java.lang.Math: long min(long,long)>($stack24, $stack23), 78)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void incrementTime()>",
  "line": "78"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>(), 77)","(<net.jodah.lyra.internal.RecurringStats: void incrementAttempts()>, virtualinvoke this.<net.jodah.lyra.internal.RecurringStats: void incrementTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: void incrementTime()>, this.<net.jodah.lyra.internal.RecurringStats: long waitTime> = $stack25, 78)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>",
  "line": "60"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack23 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>(), 79)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getWaitTime()>, $stack1 = this.<net.jodah.lyra.internal.RecurringStats: long waitTime>, 60)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "count := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "length := @parameter0: long",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "-1"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this.<net.jodah.lyra.util.Duration: long length> = length",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>",
  "line": "67"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack35 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>(), 68)","(<net.jodah.lyra.internal.RecurringStats: net.jodah.lyra.util.Duration getMaxWaitTime()>, $stack4 = staticinvoke <net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>($stack3), 51)","(<net.jodah.lyra.util.Duration: net.jodah.lyra.util.Duration nanos(long)>, specialinvoke $stack2.<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>(count, $stack3), 246)","(<net.jodah.lyra.util.Duration: void <init>(long,java.util.concurrent.TimeUnit)>, this.<net.jodah.lyra.util.Duration: long length> = length, 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<net.jodah.lyra.util.Duration: long length>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)","(<net.jodah.lyra.util.Duration: long toNanos()>, $stack2 = this.<net.jodah.lyra.util.Duration: long length>, 147)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($stack2, $stack1)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.util.Duration",
  "method": "<net.jodah.lyra.util.Duration: long toNanos()>",
  "line": "147"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack36 = virtualinvoke $stack34.<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>($stack35), 68)","(<net.jodah.lyra.internal.util.concurrent.ReentrantCircuit: boolean await(net.jodah.lyra.util.Duration)>, $stack4 = virtualinvoke waitDuration.<net.jodah.lyra.util.Duration: long toNanos()>(), 71)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack8 = virtualinvoke $stack7.<net.jodah.lyra.util.Duration: long toNanos()>(), 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "34"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, this.<net.jodah.lyra.internal.RecurringStats: long maxDuration> = $stack8, 34)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>",
  "line": "36"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, specialinvoke $stack30.<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>(recurringPolicy), 76)","(<net.jodah.lyra.internal.RecurringStats: void <init>(net.jodah.lyra.internal.RecurringPolicy)>, $stack12 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 36)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack4 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 93)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack9 = this.<net.jodah.lyra.internal.RecurringStats: long maxDuration>, 94)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = $stack10 cmp $stack9",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack11 = $stack10 cmp $stack9, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack11 >= 0 goto $stack12 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack10",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "withinMaxDuration = $stack12",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, withinMaxDuration = $stack12, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if withinMaxDuration != 0 goto $stack6 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = e instanceof java.net.SocketTimeoutException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "40"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack2 = e instanceof java.net.SocketTimeoutException, 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack2 != 0 goto return 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "40"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = e instanceof com.rabbitmq.client.PossibleAuthenticationFailureException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "43"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack8 = e instanceof com.rabbitmq.client.PossibleAuthenticationFailureException, 43)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto (branch)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "43"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack41 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RetryableResource",
  "method": "<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>",
  "line": "63"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, retryable = $stack41, 59)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "retryable = $stack41",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RetryableResource",
  "method": "<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>",
  "line": "59"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, retryable = $stack41, 59)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack15 = this.<net.jodah.lyra.internal.RecurringStats: int attemptCount>, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack15 >= $stack14 goto $stack16 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = reason instanceof com.rabbitmq.client.Command",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack6 = reason instanceof com.rabbitmq.client.Command, 98)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = reason instanceof com.rabbitmq.client.Command",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack6 = reason instanceof com.rabbitmq.client.Command, 98)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "98"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 92)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack14 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack15 >= $stack14 goto $stack16 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "94"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = $stack4 cmp -1L",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack5 = $stack4 cmp -1L, 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack5 == 0 goto $stack12 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "93"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = $stack6 instanceof java.io.EOFException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "41"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack7 = $stack6 instanceof java.io.EOFException, 41)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack7 == 0 goto $stack8 = e instanceof com.rabbitmq.client.PossibleAuthenticationFailureException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack22 = virtualinvoke retryStats.<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>(), 78)","(<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>, $stack3 = this.<net.jodah.lyra.internal.RecurringStats: int maxAttempts>, 92)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack3 == -1 goto $stack16 = 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.RecurringStats",
  "method": "<net.jodah.lyra.internal.RecurringStats: boolean isPolicyExceeded()>",
  "line": "92"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack8 = method instanceof com.rabbitmq.client.AMQP$Connection$Close, 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack8 == 0 goto $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "101"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack9 = method instanceof com.rabbitmq.client.AMQP$Channel$Close, 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto return 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "103"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack14 = (com.rabbitmq.client.AMQP$Connection$Close) method, 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack15 = interfaceinvoke $stack14.<com.rabbitmq.client.AMQP$Connection$Close: int getReplyCode()>(), 102)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack15)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack16",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "102"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = e instanceof java.net.ConnectException",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "42"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack3 = e instanceof java.net.ConnectException, 42)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack3 != 0 goto return 1",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "42"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "97"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, reason = virtualinvoke e.<com.rabbitmq.client.ShutdownSignalException: java.lang.Object getReason()>(), 97)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "command = (com.rabbitmq.client.Command) reason",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "99"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, command = (com.rabbitmq.client.Command) reason, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "100"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, method = interfaceinvoke command.<com.rabbitmq.client.Command: com.rabbitmq.client.Method getMethod()>(), 100)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack11 = (com.rabbitmq.client.AMQP$Channel$Close) method, 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>()",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>, $stack12 = interfaceinvoke $stack11.<com.rabbitmq.client.AMQP$Channel$Close: int getReplyCode()>(), 104)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(int)>($stack12)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>",
  "line": "104"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse)",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": ["(<net.jodah.lyra.internal.RetryableResource: java.lang.Object callWithRetries(java.util.concurrent.Callable,net.jodah.lyra.internal.RecurringPolicy,net.jodah.lyra.internal.RecurringStats,boolean,boolean)>, $stack43 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>(e, sse), 60)","(<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>, $stack9 = staticinvoke <net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(com.rabbitmq.client.ShutdownSignalException)>(sse), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 == 0 goto $stack10 = 0",
"location": {
  "file": "",
  "class": "net.jodah.lyra.internal.util.Exceptions",
  "method": "<net.jodah.lyra.internal.util.Exceptions: boolean isRetryable(java.lang.Exception,com.rabbitmq.client.ShutdownSignalException)>",
  "line": "45"
},
"stackTrace": [""]
}]
}
}

]
