Running soot scenario splunk-library-javalogging;com.splunk.logging.serialization.HecJsonSerializer;serialize(HttpEventCollectorEventInfo);f80bc59f417077de739ae23c10be9b1658219bed
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/splunk-library-javalogging/f80bc59f417077de739ae23c10be9b1658219bed/original-without-dependencies/splunk-library-javalogging-1.8.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,45000
Time to perform Confluence 1 Inter 0,41400
Configure Soot Confluence 2 Inter 0,20500
Time to perform Confluence 2 Inter 0,06900
Visited methods: 12
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/splunk-library-javalogging/f80bc59f417077de739ae23c10be9b1658219bed/original-without-dependencies/splunk-library-javalogging-1.8.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,65900
Runtime: 0.023s
Time to perform OA Inter 0,76100
OA Inter Visited methods: 7
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/splunk-library-javalogging/f80bc59f417077de739ae23c10be9b1658219bed/original-without-dependencies/splunk-library-javalogging-1.8.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,57500
Time to perform DFP Inter 0,44300
Depth limit: 5
CONFLICTS: []
Visited methods: 6
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/splunk-library-javalogging/f80bc59f417077de739ae23c10be9b1658219bed/original-without-dependencies/splunk-library-javalogging-1.8.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,40100
Time to perform DFP Inter 0,47800
Depth limit: 5
CONFLICTS: DF interference in <com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>
Data flows from execution of line 53 to 61, defined in $stack32 = this.<com.splunk.logging.serialization.HecJsonSerializer: com.splunk.logging.EventHeaderSerializer eventHeaderSerializer> and propagated in interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28)
Caused by line 53 flow: path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, $stack32 = this.<com.splunk.logging.serialization.HecJsonSerializer: com.splunk.logging.EventHeaderSerializer eventHeaderSerializer>, 53)
Caused by line 61 flow: path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61)
DF interference in <com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>
Data flows from execution of line 55 to 61, defined in event = tmp$1672736386 and propagated in interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28)
Caused by line 55 flow: path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = tmp$1672736386, 55)
Caused by line 61 flow: path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61)
[List(Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,event = tmp$1672736386,55,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = tmp$1672736386, 55)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,tmp$724886412 = (java.util.Map) event,-1,SimpleNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, tmp$724886412 = (java.util.Map) event, -1)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28),61,SinkNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61))), List(Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,$stack32 = this.<com.splunk.logging.serialization.HecJsonSerializer: com.splunk.logging.EventHeaderSerializer eventHeaderSerializer>,53,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, $stack32 = this.<com.splunk.logging.serialization.HecJsonSerializer: com.splunk.logging.EventHeaderSerializer eventHeaderSerializer>, 53)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,event = interfaceinvoke $stack32.<com.splunk.logging.EventHeaderSerializer: java.util.Map serializeEventHeader(com.splunk.logging.HttpEventCollectorEventInfo,java.util.Map)>(info, tmp$268490061),53,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = interfaceinvoke $stack32.<com.splunk.logging.EventHeaderSerializer: java.util.Map serializeEventHeader(com.splunk.logging.HttpEventCollectorEventInfo,java.util.Map)>(info, tmp$268490061), 53)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,tmp$724886412 = (java.util.Map) event,-1,SimpleNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, tmp$724886412 = (java.util.Map) event, -1)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28),61,SinkNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$724886412.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61)))]
Visited methods: 6
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/splunk-library-javalogging/f80bc59f417077de739ae23c10be9b1658219bed/original-without-dependencies/splunk-library-javalogging-1.8.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48800
Time to perform PDG 0,51300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/splunk-library-javalogging/f80bc59f417077de739ae23c10be9b1658219bed/original-without-dependencies/splunk-library-javalogging-1.8.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,40000
Time to perform PDG 0,48800
CONFLICTS: [List(Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,event = tmp$1027022907,55,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = tmp$1027022907, 55)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,tmp$2095710480 = (java.util.Map) event,-1,SimpleNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, tmp$2095710480 = (java.util.Map) event, -1)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,interfaceinvoke tmp$2095710480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28),61,SinkNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$2095710480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61))), List(Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,if $stack5 == null goto tmp$1027022907 = new java.util.HashMap,52,SourceNode, path: ) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,event = tmp$1027022907,55,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = tmp$1027022907, 55)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,tmp$2095710480 = (java.util.Map) event,-1,SimpleNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, tmp$2095710480 = (java.util.Map) event, -1)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,interfaceinvoke tmp$2095710480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28),61,SinkNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$2095710480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61))), List(Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,$stack32 = this.<com.splunk.logging.serialization.HecJsonSerializer: com.splunk.logging.EventHeaderSerializer eventHeaderSerializer>,53,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, $stack32 = this.<com.splunk.logging.serialization.HecJsonSerializer: com.splunk.logging.EventHeaderSerializer eventHeaderSerializer>, 53)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,event = interfaceinvoke $stack32.<com.splunk.logging.EventHeaderSerializer: java.util.Map serializeEventHeader(com.splunk.logging.HttpEventCollectorEventInfo,java.util.Map)>(info, tmp$2089636626),53,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = interfaceinvoke $stack32.<com.splunk.logging.EventHeaderSerializer: java.util.Map serializeEventHeader(com.splunk.logging.HttpEventCollectorEventInfo,java.util.Map)>(info, tmp$2089636626), 53)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,event = tmp$1027022907,55,SourceNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, event = tmp$1027022907, 55)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,tmp$2095710480 = (java.util.Map) event,-1,SimpleNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, tmp$2095710480 = (java.util.Map) event, -1)) => Node(<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>,interfaceinvoke tmp$2095710480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $stack28),61,SinkNode, path: (<com.splunk.logging.serialization.HecJsonSerializer: java.lang.String serialize(com.splunk.logging.HttpEventCollectorEventInfo)>, interfaceinvoke tmp$2095710480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('time', $stack28), 61)))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
