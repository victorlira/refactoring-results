Running soot scenario ninja;ninja.template.TemplateEngineFreemarker;invoke(Context, Object);9ff808e7dfb4262128dda50e5990b1226b0c3f1e
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/ninja/9ff808e7dfb4262128dda50e5990b1226b0c3f1e/original-without-dependencies/ninja-core-0.4-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,38300
Time to perform Confluence 1 Inter 0,61600
Configure Soot Confluence 2 Inter 0,24700
Time to perform Confluence 2 Inter 0,21200
Visited methods: 52
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60))
SINK=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)), SOURCE=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55))
SINK=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55)), SOURCE=>BASE: Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,tmp$538292941 = (java.util.Map) map,-1,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, tmp$538292941 = (java.util.Map) map, -1)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,interfaceinvoke tmp$538292941.<java.util.Map: void putAll(java.util.Map)>(i18nMap),69,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, interfaceinvoke tmp$538292941.<java.util.Map: void putAll(java.util.Map)>(i18nMap), 69))
SINK=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,tmp$2123127037 = (java.util.Map) map,-1,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, tmp$2123127037 = (java.util.Map) map, -1)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,interfaceinvoke tmp$2123127037.<java.util.Map: void putAll(java.util.Map)>(i18nMap),69,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, interfaceinvoke tmp$2123127037.<java.util.Map: void putAll(java.util.Map)>(i18nMap), 69)), SOURCE=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SinkNode, path: )
SINK=>BASE: Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SinkNode, path: ), SOURCE=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60))
SINK=>BASE: Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)), SOURCE=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SinkNode, path: )
SINK=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SinkNode, path: ), SOURCE=>BASE: Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,tmp$538292941 = (java.util.Map) map,-1,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, tmp$538292941 = (java.util.Map) map, -1)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,interfaceinvoke tmp$538292941.<java.util.Map: void putAll(java.util.Map)>(i18nMap),69,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, interfaceinvoke tmp$538292941.<java.util.Map: void putAll(java.util.Map)>(i18nMap), 69))
SINK=>BASE: Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,tmp$2123127037 = (java.util.Map) map,-1,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, tmp$2123127037 = (java.util.Map) map, -1)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,interfaceinvoke tmp$2123127037.<java.util.Map: void putAll(java.util.Map)>(i18nMap),69,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, interfaceinvoke tmp$2123127037.<java.util.Map: void putAll(java.util.Map)>(i18nMap), 69)), SOURCE=>BASE: Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55))
SINK=>BASE: Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55))]
Confluence interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Confluence flows from execution of lines 47 and 47 to line 60, defined in object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and used in map = (java.util.Map) object
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 60 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)
Confluence interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Confluence flows from execution of lines 47 and 47 to line 55, defined in object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and used in $stack12 = object instanceof java.util.Map
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 55 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55)
Confluence interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Confluence flows from execution of lines 47 and 47 to line 69, defined in object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and used in interfaceinvoke tmp$2123127037.<java.util.Map: void putAll(java.util.Map)>(i18nMap)
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 69 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, interfaceinvoke tmp$2123127037.<java.util.Map: void putAll(java.util.Map)>(i18nMap), 69)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/ninja/9ff808e7dfb4262128dda50e5990b1226b0c3f1e/original-without-dependencies/ninja-core-0.4-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,59100
Runtime: 0.008s
Time to perform OA Inter 0,68700
OA Inter Visited methods: 2
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/ninja/9ff808e7dfb4262128dda50e5990b1226b0c3f1e/original-without-dependencies/ninja-core-0.4-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43100
Time to perform DFP Inter 0,71800
Depth limit: 5
CONFLICTS: DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Data flows from execution of line 71 to 82, defined in $stack18 = this.<ninja.template.TemplateEngineFreemarker: ninja.template.TemplateEngineHelper templateEngineHelper> and propagated in virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24)
Caused by line 71 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack18 = this.<ninja.template.TemplateEngineFreemarker: ninja.template.TemplateEngineHelper templateEngineHelper>, 71)
Caused by line 82 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)
DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Data flows from execution of line 47 to 82, defined in $stack1 = this.<ninja.Result: java.lang.Object renderable> and propagated in virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24)
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 82 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)
DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Data flows from execution of line 47 to 82, defined in object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>() and propagated in virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24)
Caused by line 47 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)
Caused by line 82 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)
DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Data flows from execution of line 71 to 82, defined in $stack9 = virtualinvoke result.<ninja.Result: java.lang.String getTemplate()>() and propagated in virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24)
Caused by line 71 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)
Caused by line 82 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)
DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Data flows from execution of line 71 to 82, defined in $stack1 = this.<ninja.Result: java.lang.String template> and propagated in virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24)
Caused by line 71 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71) => (<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>, $stack8 = virtualinvoke result.<ninja.Result: java.lang.String getTemplate()>(), 15)
Caused by line 82 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)
DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Data flows from execution of line 71 to 82, defined in $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%sviews/%s/%s%s", $stack15) and propagated in virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24)
Caused by line 71 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)
Caused by line 82 flow: path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)
DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>,$stack9 = virtualinvoke result.<ninja.Result: java.lang.String getTemplate()>(),46,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName),78,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName), 78)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,map = (java.util.Map) object,60,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, map = (java.util.Map) object, 60)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.Result: java.lang.String getTemplate()>,$stack1 = this.<ninja.Result: java.lang.String template>,127,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71) => (<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>, $stack8 = virtualinvoke result.<ninja.Result: java.lang.String getTemplate()>(), 15)) => Node(<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>,$stack9 = virtualinvoke result.<ninja.Result: java.lang.String getTemplate()>(),46,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName),78,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName), 78)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>,$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%sviews/%s/%s%s", $stack15),42,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName),78,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName), 78)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.Result: java.lang.Object getRenderable()>,return $stack1,59,SinkNode, path: )), List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack18 = this.<ninja.template.TemplateEngineFreemarker: ninja.template.TemplateEngineHelper templateEngineHelper>,71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack18 = this.<ninja.template.TemplateEngineFreemarker: ninja.template.TemplateEngineHelper templateEngineHelper>, 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName),78,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName), 78)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82)))]
Visited methods: 26
 Analysis results
----------------------------
 Number of conflicts: 7
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/ninja/9ff808e7dfb4262128dda50e5990b1226b0c3f1e/original-without-dependencies/ninja-core-0.4-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,48500
Time to perform DFP Inter 0,62600
Depth limit: 5
CONFLICTS: DF interference in <ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<ninja.Result: java.lang.Object getRenderable()>,$stack1 = this.<ninja.Result: java.lang.Object renderable>,59,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.Result: java.lang.Object getRenderable()>,return $stack1,59,SinkNode, path: ))]
Visited methods: 26
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/ninja/9ff808e7dfb4262128dda50e5990b1226b0c3f1e/original-without-dependencies/ninja-core-0.4-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52100
Time to perform PDG 0,45400
CONFLICTS: [List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack19 = interfaceinvoke context.<ninja.Context: ninja.Route getRoute()>(),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack19 = interfaceinvoke context.<ninja.Context: ninja.Route getRoute()>(), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName),78,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName), 78)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack18 = this.<ninja.template.TemplateEngineFreemarker: ninja.template.TemplateEngineHelper templateEngineHelper>,71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack18 = this.<ninja.template.TemplateEngineFreemarker: ninja.template.TemplateEngineHelper templateEngineHelper>, 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20),71,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, templateName = virtualinvoke $stack18.<ninja.template.TemplateEngineHelper: java.lang.String getTemplateForResult(ninja.Route,ninja.Result,java.lang.String)>($stack19, result, $stack20), 71)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName),78,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, freemarkerTemplate = virtualinvoke $stack22.<freemarker.template.Configuration: freemarker.template.Template getTemplate(java.lang.String)>(templateName), 78)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24),82,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke freemarkerTemplate.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(map, $stack24), 82))), List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if $stack12 != 0 goto map = (java.util.Map) object,55,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack25 = interfaceinvoke responseStreams.<ninja.utils.ResponseStreams: java.io.Writer getWriter()>(),84,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack25 = interfaceinvoke responseStreams.<ninja.utils.ResponseStreams: java.io.Writer getWriter()>(), 84)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,virtualinvoke $stack25.<java.io.Writer: void flush()>(),84,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, virtualinvoke $stack25.<java.io.Writer: void flush()>(), 84))), List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if $stack12 != 0 goto map = (java.util.Map) object,55,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack26 = interfaceinvoke responseStreams.<ninja.utils.ResponseStreams: java.io.Writer getWriter()>(),85,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack26 = interfaceinvoke responseStreams.<ninja.utils.ResponseStreams: java.io.Writer getWriter()>(), 85)))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/ninja/9ff808e7dfb4262128dda50e5990b1226b0c3f1e/original-without-dependencies/ninja-core-0.4-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53800
Time to perform PDG 0,41300
CONFLICTS: [List(Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(),47,SourceNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, object = virtualinvoke result.<ninja.Result: java.lang.Object getRenderable()>(), 47)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if object != null goto $stack12 = object instanceof java.util.Map,53,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack12 = object instanceof java.util.Map,55,SimpleNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack12 = object instanceof java.util.Map, 55)) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,if $stack12 != 0 goto map = (java.util.Map) object,55,SimpleNode, path: ) => Node(<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>,$stack19 = interfaceinvoke context.<ninja.Context: ninja.Route getRoute()>(),71,SinkNode, path: (<ninja.template.TemplateEngineFreemarker: void invoke(ninja.Context,ninja.Result)>, $stack19 = interfaceinvoke context.<ninja.Context: ninja.Route getRoute()>(), 71)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
