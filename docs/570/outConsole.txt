Running soot scenario movsim;org.movsim.viewer.graphics.TrafficCanvasScenarios;initGraphicSettings();8ca385dde480797527bebd140d5a32525b14f2a7
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/movsim/8ca385dde480797527bebd140d5a32525b14f2a7/original-without-dependencies/viewer-1.0-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,05200
Time to perform Confluence 1 Inter 1,87800
Configure Soot Confluence 2 Inter 0,35200
Time to perform Confluence 2 Inter 1,45100
Visited methods: 96
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/movsim/8ca385dde480797527bebd140d5a32525b14f2a7/original-without-dependencies/viewer-1.0-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,86500
Runtime: 0.063s
Time to perform OA Inter 1,54500
OA Inter Visited methods: 119
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/movsim/8ca385dde480797527bebd140d5a32525b14f2a7/original-without-dependencies/viewer-1.0-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,75100
Time to perform DFP Inter 1,61300
Depth limit: 5
CONFLICTS: []
Visited methods: 48
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/movsim/8ca385dde480797527bebd140d5a32525b14f2a7/original-without-dependencies/viewer-1.0-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,72900
Time to perform DFP Inter 1,59600
Depth limit: 5
CONFLICTS: DF interference in <org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>
Data flows from execution of line 218 to 233, defined in $stack1 = this.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput vehiclesInput> and propagated in interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel)
Caused by line 218 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218) => (<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>, $stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 149)
Caused by line 233 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)
DF interference in <org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>
Data flows from execution of line 218 to 233, defined in $stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>() and propagated in interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel)
Caused by line 218 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)
Caused by line 233 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)
DF interference in <org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>
Data flows from execution of line 218 to 233, defined in $stack12 = this.<org.movsim.viewer.graphics.TrafficCanvasScenarios: org.movsim.simulator.Simulator simulator> and propagated in interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel)
Caused by line 218 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack12 = this.<org.movsim.viewer.graphics.TrafficCanvasScenarios: org.movsim.simulator.Simulator simulator>, 218)
Caused by line 233 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)
DF interference in <org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>
Data flows from execution of line 222 to 233, defined in $stack1 = this.<org.movsim.input.model.VehiclesInput: java.util.Map vehicleInputMap> and propagated in interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel)
Caused by line 222 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)
Caused by line 233 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)
DF interference in <org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>
Data flows from execution of line 222 to 233, defined in $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>() and propagated in interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel)
Caused by line 222 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)
Caused by line 233 flow: path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)
[List(Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack12 = this.<org.movsim.viewer.graphics.TrafficCanvasScenarios: org.movsim.simulator.Simulator simulator>,218,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack12 = this.<org.movsim.viewer.graphics.TrafficCanvasScenarios: org.movsim.simulator.Simulator simulator>, 218)) => Node(<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>,this := @this: org.movsim.simulator.Simulator,-1,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>,$stack1 = this.<org.movsim.simulator.Simulator: org.movsim.input.InputData inputData>,149,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218) => (<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>, $stack1 = this.<org.movsim.simulator.Simulator: org.movsim.input.InputData inputData>, 149)) => Node(<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>,this := @this: org.movsim.input.InputData,-1,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218) => (<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>, $stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 149)) => Node(<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>,$stack1 = this.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput vehiclesInput>,66,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218) => (<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>, $stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 149)) => Node(<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>,$stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),149,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),218,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,this := @this: org.movsim.input.model.VehiclesInput,-1,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,$stack1 = this.<org.movsim.input.model.VehiclesInput: java.util.Map vehicleInputMap>,67,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(),237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(), 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehicleTypeLabel = (java.lang.String) $stack18,237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehicleTypeLabel = (java.lang.String) $stack18, 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel),233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233))), List(Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(),237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(), 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehicleTypeLabel = (java.lang.String) $stack18,237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehicleTypeLabel = (java.lang.String) $stack18, 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel),233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233))), List(Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,$stack1 = this.<org.movsim.input.model.VehiclesInput: java.util.Map vehicleInputMap>,67,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(),237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(), 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehicleTypeLabel = (java.lang.String) $stack18,237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehicleTypeLabel = (java.lang.String) $stack18, 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel),233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233))), List(Node(<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>,$stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),149,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),218,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,this := @this: org.movsim.input.model.VehiclesInput,-1,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,$stack1 = this.<org.movsim.input.model.VehiclesInput: java.util.Map vehicleInputMap>,67,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(),237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(), 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehicleTypeLabel = (java.lang.String) $stack18,237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehicleTypeLabel = (java.lang.String) $stack18, 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel),233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233))), List(Node(<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>,$stack1 = this.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput vehiclesInput>,66,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218) => (<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>, $stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 149)) => Node(<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>,$stack2 = virtualinvoke $stack1.<org.movsim.input.InputData: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),149,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),218,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,this := @this: org.movsim.input.model.VehiclesInput,-1,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>,$stack1 = this.<org.movsim.input.model.VehiclesInput: java.util.Map vehicleInputMap>,67,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(),237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack18 = interfaceinvoke segment#4.<java.util.Iterator: java.lang.Object next()>(), 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehicleTypeLabel = (java.lang.String) $stack18,237,SimpleNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehicleTypeLabel = (java.lang.String) $stack18, 237)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("set color for vehicle label={}", vehicleTypeLabel),233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)))]
Visited methods: 48
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/movsim/8ca385dde480797527bebd140d5a32525b14f2a7/original-without-dependencies/viewer-1.0-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,98200
Time to perform PDG 1,32600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/movsim/8ca385dde480797527bebd140d5a32525b14f2a7/original-without-dependencies/viewer-1.0-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,73700
Time to perform PDG 1,41300
CONFLICTS: [List(Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack17 = interfaceinvoke segment#4.<java.util.Iterator: boolean hasNext()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack17 = interfaceinvoke segment#4.<java.util.Iterator: boolean hasNext()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,if $stack17 == 0 goto return,222,SourceNode, path: ) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack26 = <org.movsim.viewer.graphics.TrafficCanvasScenarios: org.slf4j.Logger logger>,233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233))), List(Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(),218,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, vehiclesInput#3 = virtualinvoke $stack12.<org.movsim.simulator.Simulator: org.movsim.input.model.VehiclesInput getVehiclesInput()>(), 218)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack17 = interfaceinvoke segment#4.<java.util.Iterator: boolean hasNext()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack17 = interfaceinvoke segment#4.<java.util.Iterator: boolean hasNext()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,if $stack17 == 0 goto return,222,SourceNode, path: ) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack26 = <org.movsim.viewer.graphics.TrafficCanvasScenarios: org.slf4j.Logger logger>,233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233))), List(Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,if vehiclesInput#3 != null goto $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),219,SourceNode, path: ) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack14 = virtualinvoke vehiclesInput#3.<org.movsim.input.model.VehiclesInput: java.util.Map getVehicleInputMap()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, segment#4 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack17 = interfaceinvoke segment#4.<java.util.Iterator: boolean hasNext()>(),222,SourceNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, $stack17 = interfaceinvoke segment#4.<java.util.Iterator: boolean hasNext()>(), 222)) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,if $stack17 == 0 goto return,222,SourceNode, path: ) => Node(<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>,$stack26 = <org.movsim.viewer.graphics.TrafficCanvasScenarios: org.slf4j.Logger logger>,233,SinkNode, path: (<org.movsim.viewer.graphics.TrafficCanvasScenarios: void initGraphicSettings()>, interfaceinvoke $stack26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>('set color for vehicle label={}', vehicleTypeLabel), 233)))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
