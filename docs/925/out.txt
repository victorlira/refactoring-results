SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>,221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>, 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack31 = new java.lang.StringBuilder,781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, specialinvoke $stack31.<java.lang.StringBuilder: void <init>()>(), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nested union: "),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Nested union: '), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(), 781)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(),784,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(), 784)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,$stack1 = x0.<org.apache.avro.Schema$Type: java.lang.String name>,91,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>,221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>, 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,$stack1 = x0.<org.apache.avro.Schema$Type: java.lang.String name>,91,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nested union: "),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Nested union: '), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(), 781)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nested union: "),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Nested union: '), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(), 781)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>,329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>, 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,$stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,old = (org.codehaus.jackson.JsonNode) $stack7,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, old = (org.codehaus.jackson.JsonNode) $stack7, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value),89,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value), 89))
SINK=>BASE: Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,old = (org.codehaus.jackson.JsonNode) $stack7,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, old = (org.codehaus.jackson.JsonNode) $stack7, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value),89,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value), 89))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(),784,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(), 784)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86))
SINK=>BASE: Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,old = (org.codehaus.jackson.JsonNode) $stack7,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, old = (org.codehaus.jackson.JsonNode) $stack7, 86))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(),779,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(), 779)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack31 = new java.lang.StringBuilder,781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, specialinvoke $stack31.<java.lang.StringBuilder: void <init>()>(), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nested union: "),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Nested union: '), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 781)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(),781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(), 781)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86))
SINK=>BASE: Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,old = (org.codehaus.jackson.JsonNode) $stack7,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, old = (org.codehaus.jackson.JsonNode) $stack7, 86))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(),779,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(), 779)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>,329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>, 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,$stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>,88,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 88)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,interfaceinvoke $stack14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value),88,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, interfaceinvoke $stack14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 88))
SINK=>BASE: Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>,88,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 88))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>,329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>, 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,$stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,old = (org.codehaus.jackson.JsonNode) $stack7,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, old = (org.codehaus.jackson.JsonNode) $stack7, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value),89,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value), 89))
SINK=>BASE: Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,old = (org.codehaus.jackson.JsonNode) $stack7,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, old = (org.codehaus.jackson.JsonNode) $stack7, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value),89,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack8 = virtualinvoke old.<org.codehaus.jackson.JsonNode: boolean equals(java.lang.Object)>(value), 89))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>,329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack3 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeName>, 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,$stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, "", "", 0),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>,88,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 88)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,interfaceinvoke $stack14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value),88,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, interfaceinvoke $stack14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 88))
SINK=>BASE: Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, this.<org.apache.avro.JsonProperties: java.util.Map props> = $stack2, 32)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>,86,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack6 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 86)) => Node(<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>,$stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>,88,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke field.<org.apache.avro.Schema$Field: void addProp(java.lang.String,java.lang.String)>('source', $stack28), 132) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,java.lang.String)>, virtualinvoke this.<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>(name, $stack3), 67) => (<org.apache.avro.JsonProperties: void addProp(java.lang.String,org.codehaus.jackson.JsonNode)>, $stack14 = this.<org.apache.avro.JsonProperties: java.util.Map props>, 88))

SOURCE=>BASE: Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack14 = this.<org.apache.avro.Schema$Name: java.lang.String space>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

source(org.apache.avro.Schema$LockableArrayList, <init>, -1, Schema$LockableArrayList.<org.apache.avro.Schema$LockableArrayList: boolean locked> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167)]) => sink(org.apache.avro.Schema$LockableArrayList, <init>, -1, Schema$LockableArrayList.<org.apache.avro.Schema$LockableArrayList: boolean locked> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:585)])

source(org.apache.avro.Schema, <init>, 103, this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type> = type, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:776), at org.apache.avro.Schema.<init>(Schema.java:103)]) => sink(org.apache.avro.Schema, <init>, 103, this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type> = type, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$RecordSchema.<init>(Schema$RecordSchema.java:559), at org.apache.avro.Schema$NamedSchema.<init>(Schema$NamedSchema.java:477), at org.apache.avro.Schema.<init>(Schema.java:103)])

source(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: java.lang.Object[] elementData> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$LockableArrayList.<init>(Schema$LockableArrayList.java:1401)]) => sink(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: java.lang.Object[] elementData> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:585), at org.apache.avro.Schema$LockableArrayList.<init>(Schema$LockableArrayList.java:1393)])

source(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$LockableArrayList.<init>(Schema$LockableArrayList.java:1401)]) => sink(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:585), at org.apache.avro.Schema$LockableArrayList.<init>(Schema$LockableArrayList.java:1393)])

source(org.apache.avro.Schema$LockableArrayList, <init>, 1391, this.<org.apache.avro.Schema$LockableArrayList: boolean locked> = 0, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$LockableArrayList.<init>(Schema$LockableArrayList.java:1391)]) => sink(org.apache.avro.Schema$LockableArrayList, <init>, -1, Schema$LockableArrayList.<org.apache.avro.Schema$LockableArrayList: boolean locked> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:585)])

source(org.apache.avro.Schema, <init>, -1, Schema.<org.apache.avro.Schema: int hashCode> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:776)]) => sink(org.apache.avro.Schema, <init>, -1, Schema.<org.apache.avro.Schema: int hashCode> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$RecordSchema.<init>(Schema$RecordSchema.java:559), at org.apache.avro.Schema$NamedSchema.<init>(Schema$NamedSchema.java:477)])

source(org.apache.avro.Schema, <init>, -1, <org.apache.avro.Schema: java.lang.ThreadLocal validateNames> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:776)]) => sink(org.apache.avro.Schema, <init>, -1, <org.apache.avro.Schema: java.lang.ThreadLocal validateNames> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$RecordSchema.<init>(Schema$RecordSchema.java:559), at org.apache.avro.Schema$NamedSchema.<init>(Schema$NamedSchema.java:477)])

source(org.apache.avro.Schema$LockableArrayList, lock, 1405, this.<org.apache.avro.Schema$LockableArrayList: boolean locked> = 1, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:777), at org.apache.avro.Schema$LockableArrayList.lock(Schema$LockableArrayList.java:1405)]) => sink(org.apache.avro.Schema$LockableArrayList, <init>, -1, Schema$LockableArrayList.<org.apache.avro.Schema$LockableArrayList: boolean locked> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:585)])

source(org.apache.avro.Schema, <init>, -1, <org.apache.avro.Schema: java.lang.ThreadLocal validateNames> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:776)]) => sink(org.apache.avro.Schema, <clinit>, 1047, <org.apache.avro.Schema: java.lang.ThreadLocal validateNames> = $stack44, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.<clinit>(Schema.java:1047)])

source(org.apache.avro.Schema, <init>, 102, $stack2 = <org.apache.avro.Schema: java.util.Set SCHEMA_RESERVED>, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:776), at org.apache.avro.Schema.<init>(Schema.java:102)]) => sink(org.apache.avro.Schema, <init>, 102, $stack2 = <org.apache.avro.Schema: java.util.Set SCHEMA_RESERVED>, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$RecordSchema.<init>(Schema$RecordSchema.java:559), at org.apache.avro.Schema$NamedSchema.<init>(Schema$NamedSchema.java:477), at org.apache.avro.Schema.<init>(Schema.java:102)])

source(org.apache.avro.Schema, <init>, 128, this.<org.apache.avro.Schema: int hashCode> = -2147483648, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:776), at org.apache.avro.Schema.<init>(Schema.java:128)]) => sink(org.apache.avro.Schema, <init>, -1, Schema.<org.apache.avro.Schema: int hashCode> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$RecordSchema.<init>(Schema$RecordSchema.java:559), at org.apache.avro.Schema$NamedSchema.<init>(Schema$NamedSchema.java:477)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:584)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:584)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.Set entrySet> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:584)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:584)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int modCount> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:137), at org.apache.avro.Schema$RecordSchema.setFields(Schema$RecordSchema.java:584)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: java.util.HashMap$Node[] table> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:439), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.access$200(Schema.java:79), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int threshold> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.createRecord(Schema.java:145), at org.apache.avro.Schema$Name.<init>(Schema$Name.java:442), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

source(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:129), at org.apache.avro.Schema.createUnion(Schema.java:167), at org.apache.avro.Schema$UnionSchema.<init>(Schema$UnionSchema.java:773)]) => sink(java.util.HashMap, <init>, -1, HashMap.<java.util.HashMap: int size> = null, [at ly.stealth.xmlavro.SchemaBuilder.createRootRecordSchema(SchemaBuilder.java:136), at org.apache.avro.Schema.<clinit>(Schema.java:1000)])

List(Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = this.<org.apache.avro.Schema$Name: java.lang.String name>,445,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 445)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,$stack2 = <org.apache.avro.Schema: java.util.Set SCHEMA_RESERVED>,102,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2),102,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)))

List(Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,$stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack7 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, lastDot), 441)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack7 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, lastDot), 441)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9), 442)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,x0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372) => (<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>, $stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0), 79)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,$stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0),79,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10), 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11,442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11, 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>,$stack5 = new org.apache.avro.Schema$Name,145,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this := @this: org.apache.avro.Schema$Name,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = this.<org.apache.avro.Schema$Name: java.lang.String name>,445,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 445)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = null,431,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = null, 431)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>,$stack4 = new org.apache.avro.Schema$RecordSchema,145,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>,this := @this: org.apache.avro.Schema$RecordSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,this := @this: org.apache.avro.Schema$NamedSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2),102,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)))

List(Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack1 = new java.lang.StringBuilder,329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type"),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('type'), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136) => (<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3), 329)) => Node(<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),329,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>,$stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(),136,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, $stack13 = specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: java.lang.String nextTypeName()>(), 136)) => Node(<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack7 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, lastDot), 441)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack7 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, lastDot), 441)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9), 442)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,x0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372) => (<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>, $stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0), 79)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,$stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0),79,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10), 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11,442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11, 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack21 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name),439,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack21 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 439)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack21,439,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack21, 439)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,$stack2 = new java.util.LinkedHashMap,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>(int)>(1), 32)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,specialinvoke $stack2.<java.util.LinkedHashMap: void <init>(int)>(1),32,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>(int)>(1), 32)))

List(Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a record: "),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Not a record: '), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this), 201)) => Node(<org.apache.avro.Schema: void setFields(java.util.List)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),201,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, virtualinvoke schema.<org.apache.avro.Schema: void setFields(java.util.List)>(fields), 137) => (<org.apache.avro.Schema: void setFields(java.util.List)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(), 201)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,$stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0),79,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10), 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11,442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11, 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>,$stack4 = new org.apache.avro.Schema$RecordSchema,145,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136)) => Node(<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>,this := @this: org.apache.avro.Schema$RecordSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,this := @this: org.apache.avro.Schema$NamedSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,specialinvoke this.<java.lang.Object: void <init>()>(),36,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, specialinvoke this.<java.lang.Object: void <init>()>(), 36)))

List(Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,lastDot = virtualinvoke name.<java.lang.String: int lastIndexOf(int)>(46),434,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, lastDot = virtualinvoke name.<java.lang.String: int lastIndexOf(int)>(46), 434)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack8 = lastDot + 1,442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack8 = lastDot + 1, 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9), 442)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,x0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372) => (<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>, $stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0), 79)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,$stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0),79,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10), 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11,442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11, 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack9 = virtualinvoke name.<java.lang.String: int length()>(),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack9 = virtualinvoke name.<java.lang.String: int length()>(), 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>($stack8, $stack9), 442)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,x0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372) => (<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>, $stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0), 79)) => Node(<org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>,$stack1 = staticinvoke <org.apache.avro.Schema: java.lang.String validateName(java.lang.String)>(x0),79,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, specialinvoke $stack22.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>($stack23, optionalSchema, null, null), 131) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode)>, specialinvoke this.<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>(name, schema, doc, defaultValue, $stack5), 367) => (<org.apache.avro.Schema$Field: void <init>(java.lang.String,org.apache.avro.Schema,java.lang.String,org.codehaus.jackson.JsonNode,org.apache.avro.Schema$Field$Order)>, $stack7 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>(name), 372)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10),442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack11 = staticinvoke <org.apache.avro.Schema: java.lang.String access$200(java.lang.String)>($stack10), 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11,442,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String name> = $stack11, 442)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack17 = this.<org.apache.avro.Schema$Name: java.lang.String name>, 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 444)) => Node(<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>,this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19,444,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack5.<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>(name, namespace), 145) => (<org.apache.avro.Schema$Name: void <init>(java.lang.String,java.lang.String)>, this.<org.apache.avro.Schema$Name: java.lang.String full> = $stack19, 444)) => Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>,$stack1 = x0.<org.apache.avro.Schema$Name: java.lang.String full>,425,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack5 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 480)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack10 = staticinvoke <org.apache.avro.Schema$Name: java.lang.String access$400(org.apache.avro.Schema$Name)>(name), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 481)) => Node(<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(),481,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>(), 481)) => Node(<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>($stack13, '', '', 0), 136) => (<org.apache.avro.Schema: org.apache.avro.Schema createRecord(java.lang.String,java.lang.String,java.lang.String,boolean)>, specialinvoke $stack4.<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>($stack5, doc, isError), 145) => (<org.apache.avro.Schema$RecordSchema: void <init>(org.apache.avro.Schema$Name,java.lang.String,boolean)>, specialinvoke this.<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>($stack4, name, doc), 559) => (<org.apache.avro.Schema$NamedSchema: void <init>(org.apache.avro.Schema$Type,org.apache.avro.Schema$Name,java.lang.String)>, specialinvoke $stack7.<org.apache.avro.AvroTypeException: void <init>(java.lang.String)>($stack12), 481)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(),779,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(), 779)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>,221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>, 221)) => Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,x0 := @parameter0: org.apache.avro.Schema$Type,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,$stack1 = x0.<org.apache.avro.Schema$Type: java.lang.String name>,91,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,$stack2 = <org.apache.avro.Schema: java.util.Set SCHEMA_RESERVED>,102,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2),102,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)))

List(Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,$stack1 = x0.<org.apache.avro.Schema$Type: java.lang.String name>,91,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,this := @this: org.apache.avro.JsonProperties,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,specialinvoke this.<java.lang.Object: void <init>()>(),36,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, specialinvoke this.<java.lang.Object: void <init>()>(), 36)))

List(Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,$stack2 = new java.util.LinkedHashMap,32,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>(int)>(1), 32)) => Node(<org.apache.avro.JsonProperties: void <init>(java.util.Set)>,specialinvoke $stack2.<java.util.LinkedHashMap: void <init>(int)>(1),32,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102) => (<org.apache.avro.JsonProperties: void <init>(java.util.Set)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>(int)>(1), 32)))

List(Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>,221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>, 221)) => Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,x0 := @parameter0: org.apache.avro.Schema$Type,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,$stack1 = x0.<org.apache.avro.Schema$Type: java.lang.String name>,91,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack1 = new org.apache.avro.Schema$UnionSchema,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,this := @this: org.apache.avro.Schema$UnionSchema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853)) => Node(<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>,specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2),102,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack11.<org.apache.avro.Schema$StringSchema: void <init>()>(), 109) => (<org.apache.avro.Schema$StringSchema: void <init>()>, specialinvoke this.<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>($stack1), 853) => (<org.apache.avro.Schema: void <init>(org.apache.avro.Schema$Type)>, specialinvoke this.<org.apache.avro.JsonProperties: void <init>(java.util.Set)>($stack2), 102)))

List(Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(),784,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(), 784)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>,$stack2 = new org.apache.avro.Schema$LockableArrayList,167,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack2.<org.apache.avro.Schema$LockableArrayList: void <init>(java.util.List)>(types), 167)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,types := @parameter0: org.apache.avro.Schema$LockableArrayList,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(),779,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, i$ = virtualinvoke types.<org.apache.avro.Schema$LockableArrayList: java.util.Iterator iterator()>(), 779)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack11 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 788)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,type = (org.apache.avro.Schema) $stack11,788,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, type = (org.apache.avro.Schema) $stack11, 788)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,this := @this: org.apache.avro.Schema,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>,221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack1 = this.<org.apache.avro.Schema: org.apache.avro.Schema$Type type>, 221)) => Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,x0 := @parameter0: org.apache.avro.Schema$Type,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>,$stack1 = x0.<org.apache.avro.Schema$Type: java.lang.String name>,91,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237) => (<org.apache.avro.Schema: java.lang.String getName()>, $stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1), 221)) => Node(<org.apache.avro.Schema: java.lang.String getName()>,$stack2 = staticinvoke <org.apache.avro.Schema$Type: java.lang.String access$000(org.apache.avro.Schema$Type)>($stack1),221,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782) => (<org.apache.avro.Schema: java.lang.String getFullName()>, $stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(), 237)) => Node(<org.apache.avro.Schema: java.lang.String getFullName()>,$stack1 = virtualinvoke this.<org.apache.avro.Schema: java.lang.String getName()>(),237,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(),782,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, name = virtualinvoke type.<org.apache.avro.Schema: java.lang.String getFullName()>(), 782)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate in union:"),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate in union:'), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name), 786)) => Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(),786,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 786)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

List(Node(<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>,$stack30 = new org.apache.avro.AvroRuntimeException,781,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, optionalSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>($stack20), 129) => (<org.apache.avro.Schema: org.apache.avro.Schema createUnion(java.util.List)>, specialinvoke $stack1.<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>($stack2), 167) => (<org.apache.avro.Schema$UnionSchema: void <init>(org.apache.avro.Schema$LockableArrayList)>, specialinvoke $stack30.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack34), 781)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,this := @this: org.apache.avro.AvroRuntimeException,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117)) => Node(<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),24,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createRootRecordSchema(java.util.Map)>, nullSchema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>($stack17), 128) => (<org.apache.avro.Schema: org.apache.avro.Schema create(org.apache.avro.Schema$Type)>, specialinvoke $stack12.<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>($stack16), 117) => (<org.apache.avro.AvroRuntimeException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 24)))

