Running soot scenario otr4j;net.java.otr4j.session.SessionImpl;handleQueryMessage(QueryMessage);554c21799595e39e67f1b9efdb636eb2314df784
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,57300
Time to perform Confluence 1 Inter 0,79800
Configure Soot Confluence 2 Inter 0,22900
Time to perform Confluence 2 Inter 0,58400
Visited methods: 76
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 487)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String accountID>,29,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 487))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 487)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String accountID>,29,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 487)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 490)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" through "),489,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' through '), 489)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 490))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 490)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String protocolName>,37,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 490)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String protocolName>,37,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack16 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 490)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String protocolName>,37,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack31 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),521,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack31 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 521))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack41 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(),521,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack41 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 521)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),489,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,return $stack1,33,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),489,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,return $stack1,33,SinkNode, path: ), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13),489,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13), 489)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" through "),489,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' through '), 489)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 490)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 490)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>(),490,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>(), 490)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,virtualinvoke $stack7.<java.util.logging.Logger: void finest(java.lang.String)>($stack20),487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke $stack7.<java.util.logging.Logger: void finest(java.lang.String)>($stack20), 487))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(),487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack6 = new java.lang.StringBuilder,487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(),487,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 487)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack31 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),521,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack31 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 521))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),492,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack41 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(),521,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack41 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 521))]
Confluence interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Confluence flows from execution of lines 487 and 487 to line 492, defined in $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and used in policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 492 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492)
Confluence interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Confluence flows from execution of lines 487 and 487 to line 487, defined in $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and used in $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack9 = virtualinvoke $stack8.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 487)
Confluence interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Confluence flows from execution of lines 487 and 487 to line 490, defined in $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and used in $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 490 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack17 = virtualinvoke $stack16.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 490)
Confluence interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Confluence flows from execution of lines 487 and 492 to line 492, defined in $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 492 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 492 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 492) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Confluence interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Confluence flows from execution of lines 487 and 487 to line 521, defined in $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and used in $stack41 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 521 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack41 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 521)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,74600
Runtime: 0.027s
Time to perform OA Inter 0,82400
OA Inter Visited methods: 13
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,50900
Time to perform DFP Inter 0,92900
Depth limit: 5
CONFLICTS: DF interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Data flows from execution of line 487 to 511, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in msg = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 511 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, msg = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>(), 685)
DF interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Data flows from execution of line 487 to 511, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 511 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 686)
[List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack11 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack11 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 685)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11), 685)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack9 = virtualinvoke tmp$1794607688.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack9 = virtualinvoke tmp$1794607688.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg), 685)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack13 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack13 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12), 685)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,msg = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>(),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, msg = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>(), 685))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),686,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 511) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 686))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,return $stack1,308,SinkNode, path: ))]
Visited methods: 38
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,57300
Time to perform DFP Inter 0,86900
Depth limit: 5
CONFLICTS: DF interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Data flows from execution of line 487 to 489, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>()
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 489 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 489)
DF interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>
Data flows from execution of line 487 to 489, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>
Caused by line 487 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)
Caused by line 489 flow: path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489)
[List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),489,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 489))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>,$stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),489,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack12 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SinkNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack13 = virtualinvoke $stack12.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 489))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: void handleQueryMessage(net.java.otr4j.io.messages.QueryMessage)>, $stack8 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 487)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,return $stack1,308,SinkNode, path: ))]
Visited methods: 38
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,78700
Time to perform PDG 0,67200
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,73300
Time to perform PDG 0,59300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
