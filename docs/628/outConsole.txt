Running soot scenario hdiv;org.hdiv.components.support.OutputLinkComponentProcessor;processOutputLink(FacesContext, HtmlOutputLink);2f9993190a5d9e153c693e8060ef8050f2fe2baa
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/2f9993190a5d9e153c693e8060ef8050f2fe2baa/original-without-dependencies/hdiv-jsf-3.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,40100
Time to perform Confluence 1 Inter 0,50300
Configure Soot Confluence 2 Inter 0,18900
Time to perform Confluence 2 Inter 0,14500
Visited methods: 18
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(),62,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(), 62)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,processedParams = interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String composeParams(java.lang.String,org.hdiv.util.Method,java.lang.String)>($stack33, $stack34, "UTF-8"),62,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, processedParams = interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String composeParams(java.lang.String,org.hdiv.util.Method,java.lang.String)>($stack33, $stack34, 'UTF-8'), 62))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(),62,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(), 62)), SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData),79,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),81,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 81))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData),79,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),81,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 81)), SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35),95,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),96,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 96))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35),95,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),96,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 96)), SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData),79,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),81,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 81))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData),79,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),81,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 81)), SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35),95,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),96,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 96))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack37 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,95,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack37 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 95)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35),95,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url),96,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 96)), SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(),75,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(), 75))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(),75,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(), 75)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,if $stack56 != 0 goto dataComposer = staticinvoke <org.hdiv.util.HDIVUtil: org.hdiv.dataComposer.IDataComposer getDataComposer(javax.servlet.ServletRequest)>(request),75,SinkNode, path: ), SOURCE=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: void setUrlParams(java.lang.String)>(processedParams),63,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: void setUrlParams(java.lang.String)>(processedParams), 63))
SINK=>BASE: Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(),62,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(), 62)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,processedParams = interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String composeParams(java.lang.String,org.hdiv.util.Method,java.lang.String)>($stack33, $stack34, "UTF-8"),62,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, processedParams = interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String composeParams(java.lang.String,org.hdiv.util.Method,java.lang.String)>($stack33, $stack34, 'UTF-8'), 62)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: void setUrlParams(java.lang.String)>(processedParams),63,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: void setUrlParams(java.lang.String)>(processedParams), 63))]
Confluence interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Confluence flows from execution of lines 46 and 47 to line 62, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor> and used in $stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>()
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 47 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)
Caused by line 62 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack33 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlParams()>(), 62)
Confluence interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Confluence flows from execution of lines 46 and 79 to line 81, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData) and used in virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 79 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)
Caused by line 81 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 81)
Confluence interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Confluence flows from execution of lines 46 and 47 to line 96, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor> and used in virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 47 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack22 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 47)
Caused by line 96 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 96)
Confluence interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Confluence flows from execution of lines 46 and 95 to line 96, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and $stack37 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor> and used in virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 95 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack37 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 95)
Caused by line 96 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, virtualinvoke component.<javax.faces.component.html.HtmlOutputLink: void setValue(java.lang.Object)>(url), 96)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/2f9993190a5d9e153c693e8060ef8050f2fe2baa/original-without-dependencies/hdiv-jsf-3.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,68800
Runtime: 0.01s
Time to perform OA Inter 0,73600
OA Inter Visited methods: 2
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/2f9993190a5d9e153c693e8060ef8050f2fe2baa/original-without-dependencies/hdiv-jsf-3.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,48400
Time to perform DFP Inter 0,52600
Depth limit: 5
CONFLICTS: DF interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Data flows from execution of line 46 to 79, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and propagated in url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 79 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)
DF interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Data flows from execution of line 46 to 60, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and propagated in $stack31 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlWithoutContextPath()>()
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 60 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack31 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlWithoutContextPath()>(), 60)
DF interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Data flows from execution of line 46 to 47, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and propagated in urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 47 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)
DF interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Data flows from execution of line 46 to 48, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and propagated in $stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 48 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData), 48)
DF interference in <org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>
Data flows from execution of line 46 to 95, defined in hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request) and propagated in url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35)
Caused by line 46 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)
Caused by line 95 flow: path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95)
[List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack31 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlWithoutContextPath()>(),60,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack31 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlWithoutContextPath()>(), 60))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35),95,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData),48,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData), 48))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData),79,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack43.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrl(org.hdiv.urlProcessor.UrlData)>(urlData), 79)))]
Visited methods: 9
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/2f9993190a5d9e153c693e8060ef8050f2fe2baa/original-without-dependencies/hdiv-jsf-3.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,53600
Time to perform DFP Inter 0,50600
Depth limit: 5
CONFLICTS: []
Visited methods: 9
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/2f9993190a5d9e153c693e8060ef8050f2fe2baa/original-without-dependencies/hdiv-jsf-3.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,42700
Time to perform PDG 0,61400
CONFLICTS: [List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35),95,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, url = virtualinvoke $stack37.<org.hdiv.urlProcessor.LinkUrlProcessor: java.lang.String getProcessedUrlWithHdivState(java.lang.String,org.hdiv.urlProcessor.UrlData,java.lang.String)>(hdivParameter, urlData, stateParam#35), 95))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(),75,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(), 75)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,if $stack56 != 0 goto dataComposer = staticinvoke <org.hdiv.util.HDIVUtil: org.hdiv.dataComposer.IDataComposer getDataComposer(javax.servlet.ServletRequest)>(request),75,SimpleNode, path: ) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,dataComposer = staticinvoke <org.hdiv.util.HDIVUtil: org.hdiv.dataComposer.IDataComposer getDataComposer(javax.servlet.ServletRequest)>(request),59,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, dataComposer = staticinvoke <org.hdiv.util.HDIVUtil: org.hdiv.dataComposer.IDataComposer getDataComposer(javax.servlet.ServletRequest)>(request), 59)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String beginRequest(org.hdiv.util.Method,java.lang.String)>($stack30, $stack31),60,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String beginRequest(org.hdiv.util.Method,java.lang.String)>($stack30, $stack31), 60))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData),48,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData), 48)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,if $stack25 == 0 goto (branch),48,SinkNode, path: ) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack27 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.config.HDIVConfig config>,53,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack27 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.config.HDIVConfig config>, 53))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(),75,SimpleNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack56 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: boolean containsParams()>(), 75)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,if $stack56 != 0 goto dataComposer = staticinvoke <org.hdiv.util.HDIVUtil: org.hdiv.dataComposer.IDataComposer getDataComposer(javax.servlet.ServletRequest)>(request),75,SimpleNode, path: ) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,if hasUIParams == 0 goto stateParam#35 = interfaceinvoke dataComposer.<org.hdiv.dataComposer.IDataComposer: java.lang.String endRequest()>(),65,SimpleNode, path: ) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack43 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>,79,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack43 = this.<org.hdiv.components.support.OutputLinkComponentProcessor: org.hdiv.urlProcessor.LinkUrlProcessor linkUrlProcessor>, 79))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47))), List(Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request),46,SourceNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 46)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request),47,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, urlData = virtualinvoke $stack22.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack21, hdivParameter, request), 47)) => Node(<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>,$stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData),48,SinkNode, path: (<org.hdiv.components.support.OutputLinkComponentProcessor: void processOutputLink(javax.faces.context.FacesContext,javax.faces.component.html.HtmlOutputLink)>, $stack25 = virtualinvoke $stack24.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData), 48)))]
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/2f9993190a5d9e153c693e8060ef8050f2fe2baa/original-without-dependencies/hdiv-jsf-3.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52400
Time to perform PDG 0,50200
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
