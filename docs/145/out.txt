List(Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,$stack4 = new spark.Service$1,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,wrapper = $stack4,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, wrapper = $stack4, 547)) => Node(<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>,handler := @parameter1: spark.ExceptionHandlerImpl,-1,SimpleNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)) => Node(<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(exceptionClass, handler),60,SinkNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554) => (<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(exceptionClass, handler), 60)))

List(Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,$stack4 = new spark.Service$1,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,wrapper = $stack4,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, wrapper = $stack4, 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper),554,SinkNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)))

List(Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,$stack4 = new spark.Service$1,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,wrapper = $stack4,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, wrapper = $stack4, 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper),554,SinkNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)))

