Running soot scenario spark;spark.Service;exception(Class<?extendsException>, ExceptionHandler);e2854295f7c484671ce69bff7ec37fcb0c413a32
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/e2854295f7c484671ce69bff7ec37fcb0c413a32/original-without-dependencies/spark-core-2.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,65100
Time to perform Confluence 1 Inter 0,29700
Configure Soot Confluence 2 Inter 0,20400
Time to perform Confluence 2 Inter 0,02100
Visited methods: 10
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/e2854295f7c484671ce69bff7ec37fcb0c413a32/original-without-dependencies/spark-core-2.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,60900
Runtime: 0.008s
Time to perform OA Inter 0,65600
OA Inter Visited methods: 7
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/e2854295f7c484671ce69bff7ec37fcb0c413a32/original-without-dependencies/spark-core-2.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,64900
Time to perform DFP Inter 0,29500
Depth limit: 5
CONFLICTS: DF interference in <spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>
Data flows from execution of line 547 to 554, defined in $stack4 = new spark.Service$1 and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(exceptionClass, handler)
Caused by line 547 flow: path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)
Caused by line 554 flow: path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554) => (<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(exceptionClass, handler), 60)
DF interference in <spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>
Data flows from execution of line 547 to 554, defined in $stack4 = new spark.Service$1 and propagated in virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper)
Caused by line 547 flow: path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)
Caused by line 554 flow: path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)
[List(Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,$stack4 = new spark.Service$1,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,wrapper = $stack4,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, wrapper = $stack4, 547)) => Node(<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>,handler := @parameter1: spark.ExceptionHandlerImpl,-1,SimpleNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)) => Node(<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(exceptionClass, handler),60,SinkNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554) => (<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(exceptionClass, handler), 60))), List(Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,$stack4 = new spark.Service$1,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,wrapper = $stack4,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, wrapper = $stack4, 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper),554,SinkNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)))]
Visited methods: 5
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/e2854295f7c484671ce69bff7ec37fcb0c413a32/original-without-dependencies/spark-core-2.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43900
Time to perform DFP Inter 0,26800
Depth limit: 5
CONFLICTS: []
Visited methods: 5
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/e2854295f7c484671ce69bff7ec37fcb0c413a32/original-without-dependencies/spark-core-2.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,45700
Time to perform PDG 0,32700
CONFLICTS: [List(Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,$stack4 = new spark.Service$1,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, specialinvoke $stack4.<spark.Service$1: void <init>(spark.Service,java.lang.Class,spark.ExceptionHandler)>(this, exceptionClass, handler), 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,wrapper = $stack4,547,SourceNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, wrapper = $stack4, 547)) => Node(<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>,virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper),554,SinkNode, path: (<spark.Service: void exception(java.lang.Class,spark.ExceptionHandler)>, virtualinvoke $stack5.<spark.ExceptionMapper: void map(java.lang.Class,spark.ExceptionHandlerImpl)>(exceptionClass, wrapper), 554)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/e2854295f7c484671ce69bff7ec37fcb0c413a32/original-without-dependencies/spark-core-2.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,62300
Time to perform PDG 0,28800
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
