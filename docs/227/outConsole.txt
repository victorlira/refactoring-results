Running soot scenario auto-matter;io.norberg.automatter.processor.AutoMatterProcessor;collectionImplType(ExecutableElement);5739d194fb360dde65820538263efddba683785f
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/auto-matter/5739d194fb360dde65820538263efddba683785f/original-without-dependencies/auto-matter-0.15.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,53200
Time to perform Confluence 1 Inter 0,49500
Configure Soot Confluence 2 Inter 0,23000
Time to perform Confluence 2 Inter 0,10100
Visited methods: 20
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1185,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1185,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1180,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1180))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1180,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1180)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1171,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1171,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1167,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1167,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1185,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1185,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1167,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1167,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1180,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1180))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1180,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1180)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1189,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1189,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1189,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1189,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189)), SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1171,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171))
SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1171,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171))]
Confluence interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Confluence flows from execution of lines 1167 and 1167 to line 1185, defined in $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and used in $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)
Caused by line 1185 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185)
Confluence interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Confluence flows from execution of lines 1167 and 1167 to line 1180, defined in $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and used in $stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)
Caused by line 1180 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1180)
Confluence interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Confluence flows from execution of lines 1167 and 1167 to line 1171, defined in $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and used in $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)
Caused by line 1171 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171)
Confluence interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Confluence flows from execution of lines 1167 and 1167 to line 1167, defined in $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and used in $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)
Confluence interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Confluence flows from execution of lines 1167 and 1167 to line 1189, defined in $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0) and used in $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)
Caused by line 1189 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189)
 Analysis results
----------------------------
 Number of conflicts: 10
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/auto-matter/5739d194fb360dde65820538263efddba683785f/original-without-dependencies/auto-matter-0.15.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,66300
Runtime: 0.009s
Time to perform OA Inter 0,70900
OA Inter Visited methods: 1
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/auto-matter/5739d194fb360dde65820538263efddba683785f/original-without-dependencies/auto-matter-0.15.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52400
Time to perform DFP Inter 0,44600
Depth limit: 5
CONFLICTS: DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Data flows from execution of line 1167 to 1167, defined in $stack11 = 1 and propagated in staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,if $stack6 < index goto $stack11 = 0,1158,SinkNode, path: )), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,if $stack6 < index goto $stack11 = 0,1158,SinkNode, path: )), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack11 = 1,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11),1158,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158))), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,return $stack10,1159,SinkNode, path: )), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,return $stack10,1159,SinkNode, path: ))]
Visited methods: 10
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/auto-matter/5739d194fb360dde65820538263efddba683785f/original-without-dependencies/auto-matter-0.15.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52700
Time to perform DFP Inter 0,45000
Depth limit: 5
CONFLICTS: DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Data flows from execution of line 1167 to 1167, defined in $stack11 = 1 and propagated in staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)
Caused by line 1167 flow: path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,if $stack6 < index goto $stack11 = 0,1158,SinkNode, path: )), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(),1158,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,if $stack6 < index goto $stack11 = 0,1158,SinkNode, path: )), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack11 = 1,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11),1158,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158))), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,return $stack10,1159,SinkNode, path: )), List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,return $stack10,1159,SinkNode, path: ))]
Visited methods: 10
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/auto-matter/5739d194fb360dde65820538263efddba683785f/original-without-dependencies/auto-matter-0.15.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52700
Time to perform PDG 0,43300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/auto-matter/5739d194fb360dde65820538263efddba683785f/original-without-dependencies/auto-matter-0.15.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,74900
Time to perform PDG 0,45600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
