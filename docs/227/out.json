[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1185,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185)) SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1185,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1185))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1159
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1185
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack9 = (javax.lang.model.type.TypeMirror) $stack8",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1159
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1185
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack17 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
					"line": 1185
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1167,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1167,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1159
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1167
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack9 = (javax.lang.model.type.TypeMirror) $stack8",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1159
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1167
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
					"line": 1167
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1),1180,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1), 1180)) SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1180,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack22 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1180))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>()",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1157
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1180
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack9 = (javax.lang.model.type.TypeMirror) $stack8",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1159
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1180
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack24 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 1)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
					"line": 1180
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1189,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189)) SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1189,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1189))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>()",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1157
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1189
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>()",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1157
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1189
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack10 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
					"line": 1189
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(),1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>(), 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,type = (javax.lang.model.type.DeclaredType) $stack4,1157,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack9 = (javax.lang.model.type.TypeMirror) $stack8,1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167) => (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1171,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171)) SINK=>BASE: Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>,$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9),1159,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>,$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0),1171,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1171))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1159
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1171
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack4 = interfaceinvoke field.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>()",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
					"line": 1157
				},
				"stackTrace": [{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1157
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
	"line": 1159
},{
	"class": "io.norberg.automatter.processor.AutoMatterProcessor",
	"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
	"line": 1171
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack34 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0)",
				"location": {
					"file": "",
					"class": "io.norberg.automatter.processor.AutoMatterProcessor",
					"method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>",
					"line": 1171
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "type = (javax.lang.model.type.DeclaredType) $stack4",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1157"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 < index goto $stack11 = 0",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack11 = 1",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 < index goto $stack11 = 0",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "type = (javax.lang.model.type.DeclaredType) $stack4",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1157"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = (javax.lang.model.type.TypeMirror) $stack8",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack10",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack10",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "type = (javax.lang.model.type.DeclaredType) $stack4",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1157"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 < index goto $stack11 = 0",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack11 = 1",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($stack11), 1158)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack5 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1158)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>(), 1158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack6 < index goto $stack11 = 0",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1158"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "type = (javax.lang.model.type.DeclaredType) $stack4",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1157"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, type = (javax.lang.model.type.DeclaredType) $stack4, 1157)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>()",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack7 = interfaceinvoke type.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>(), 1159)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index), 1159)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = (javax.lang.model.type.TypeMirror) $stack8",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)","(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>, $stack9 = (javax.lang.model.type.TypeMirror) $stack8, 1159)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack10",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($stack9)",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": ["(<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName collectionImplType(javax.lang.model.element.ExecutableElement)>, $stack39 = specialinvoke this.<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>(field, 0), 1167)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack10",
"location": {
  "file": "",
  "class": "io.norberg.automatter.processor.AutoMatterProcessor",
  "method": "<io.norberg.automatter.processor.AutoMatterProcessor: com.squareup.javapoet.TypeName genericArgument(javax.lang.model.element.ExecutableElement,int)>",
  "line": "1159"
},
"stackTrace": [""]
}]
}
}

]
