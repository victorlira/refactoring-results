List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString),630,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626) => (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,$stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>(),592,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625) => (<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>(), 592)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,$stack6 = (java.lang.String) $stack5,592,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry),625,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,hostPortString := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString),630,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626) => (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,object = interfaceinvoke entry.<com.eightkdata.mongowp.bson.BsonDocument$Entry: com.eightkdata.mongowp.bson.BsonValue getValue()>(),588,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625) => (<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, object = interfaceinvoke entry.<com.eightkdata.mongowp.bson.BsonDocument$Entry: com.eightkdata.mongowp.bson.BsonValue getValue()>(), 588)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,$stack4 = interfaceinvoke object.<com.eightkdata.mongowp.bson.BsonValue: com.eightkdata.mongowp.bson.BsonString asString()>(),592,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625) => (<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack4 = interfaceinvoke object.<com.eightkdata.mongowp.bson.BsonValue: com.eightkdata.mongowp.bson.BsonString asString()>(), 592)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,$stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>(),592,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625) => (<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>(), 592)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,$stack6 = (java.lang.String) $stack5,592,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry),625,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,hostPortString := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString),630,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626) => (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>,string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry),625,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,hostPortString := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString),630,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626) => (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

List(Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString),630,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626) => (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017),631,SourceNode, path: (<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)) => Node(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>,return $stack2,630,SinkNode, path: ))

