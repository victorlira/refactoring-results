[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)","(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "592"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)","(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>(), 592)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = (java.lang.String) $stack5",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "592"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "625"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "hostPortString := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)","(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)","(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "object = interfaceinvoke entry.<com.eightkdata.mongowp.bson.BsonDocument$Entry: com.eightkdata.mongowp.bson.BsonValue getValue()>()",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "588"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)","(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, object = interfaceinvoke entry.<com.eightkdata.mongowp.bson.BsonDocument$Entry: com.eightkdata.mongowp.bson.BsonValue getValue()>(), 588)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = interfaceinvoke object.<com.eightkdata.mongowp.bson.BsonValue: com.eightkdata.mongowp.bson.BsonString asString()>()",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "592"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)","(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack4 = interfaceinvoke object.<com.eightkdata.mongowp.bson.BsonValue: com.eightkdata.mongowp.bson.BsonString asString()>(), 592)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "592"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)","(<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack5 = interfaceinvoke $stack4.<com.eightkdata.mongowp.bson.BsonString: java.lang.Object getValue()>(), 592)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = (java.lang.String) $stack5",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "592"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "625"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "hostPortString := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)","(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>",
  "line": "625"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, string = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: java.lang.String getString(com.eightkdata.mongowp.bson.BsonDocument$Entry)>(entry), 625)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "hostPortString := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)","(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>, $stack1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>(hostPortString), 630)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<com.google.common.net.HostAndPort: com.google.common.net.HostAndPort withDefaultPort(int)>(27017)",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "631"
},
"stackTrace": ["(<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(com.eightkdata.mongowp.bson.BsonDocument$Entry)>, $stack3 = staticinvoke <com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>(string), 626)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack2",
"location": {
  "file": "",
  "class": "com.eightkdata.mongowp.utils.BsonReaderTool",
  "method": "<com.eightkdata.mongowp.utils.BsonReaderTool: com.google.common.net.HostAndPort getHostAndPort(java.lang.String)>",
  "line": "630"
},
"stackTrace": [""]
}]
}
}

]
