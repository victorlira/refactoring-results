Running soot scenario nfctools;org.nfctools.ndef.ext.ExternalTypeEncoder;encodeRecord(Record, NdefMessageEncoder);15659385c0127435a9d7ed840ff8f444d3d63053
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/nfctools/15659385c0127435a9d7ed840ff8f444d3d63053/original-without-dependencies/nfctools-ndef-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,40800
Time to perform Confluence 1 Inter 0,51700
Configure Soot Confluence 2 Inter 0,17100
Time to perform Confluence 2 Inter 0,09000
Visited methods: 36
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/nfctools/15659385c0127435a9d7ed840ff8f444d3d63053/original-without-dependencies/nfctools-ndef-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,51100
Runtime: 0.025s
Time to perform OA Inter 0,63300
OA Inter Visited methods: 8
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/nfctools/15659385c0127435a9d7ed840ff8f444d3d63053/original-without-dependencies/nfctools-ndef-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,55200
Time to perform DFP Inter 0,55800
Depth limit: 5
CONFLICTS: []
Visited methods: 18
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/nfctools/15659385c0127435a9d7ed840ff8f444d3d63053/original-without-dependencies/nfctools-ndef-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,55600
Time to perform DFP Inter 0,54700
Depth limit: 5
CONFLICTS: []
Visited methods: 18
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/nfctools/15659385c0127435a9d7ed840ff8f444d3d63053/original-without-dependencies/nfctools-ndef-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,40300
Time to perform PDG 0,66000
CONFLICTS: [List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack10 = interfaceinvoke $stack8.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),45,SourceNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack10 = interfaceinvoke $stack8.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SourceNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack11 == 0 goto $stack12 = new java.lang.IllegalArgumentException,50,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(),53,SimpleNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(), 53)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack19 != 0 goto $stack20 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: java.lang.String getContent()>(),53,SimpleNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,throw $stack29,54,SinkNode, path: )), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,50,SourceNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord, 50)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack11 == 0 goto $stack12 = new java.lang.IllegalArgumentException,50,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(),53,SimpleNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(), 53)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack19 != 0 goto $stack20 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: java.lang.String getContent()>(),53,SimpleNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,throw $stack29,54,SinkNode, path: )), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,externalTypeUnsupportedRecord = (org.nfctools.ndef.ext.UnsupportedExternalTypeRecord) externalType,51,SourceNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, externalTypeUnsupportedRecord = (org.nfctools.ndef.ext.UnsupportedExternalTypeRecord) externalType, 51)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(),53,SimpleNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(), 53)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack19 != 0 goto $stack20 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: java.lang.String getContent()>(),53,SimpleNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,throw $stack29,54,SinkNode, path: )), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack11 == 0 goto $stack12 = new java.lang.IllegalArgumentException,50,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(),53,SimpleNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack19 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: boolean hasContent()>(), 53)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack19 != 0 goto $stack20 = virtualinvoke externalTypeUnsupportedRecord.<org.nfctools.ndef.ext.UnsupportedExternalTypeRecord: java.lang.String getContent()>(),53,SimpleNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,throw $stack29,54,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/nfctools/15659385c0127435a9d7ed840ff8f444d3d63053/original-without-dependencies/nfctools-ndef-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52800
Time to perform PDG 0,54800
CONFLICTS: [List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack11 == 0 goto $stack12 = new java.lang.IllegalArgumentException,50,SinkNode, path: )), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack11 == 0 goto $stack12 = new java.lang.IllegalArgumentException,50,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,externalTypeUnsupportedRecord = (org.nfctools.ndef.ext.UnsupportedExternalTypeRecord) externalType,51,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, externalTypeUnsupportedRecord = (org.nfctools.ndef.ext.UnsupportedExternalTypeRecord) externalType, 51))), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack31 = interfaceinvoke $stack30.<org.nfctools.ndef.ext.ExternalTypeContentEncoder: java.lang.String encodeContent(org.nfctools.ndef.ext.ExternalTypeRecord)>(externalType),49,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack31 = interfaceinvoke $stack30.<org.nfctools.ndef.ext.ExternalTypeContentEncoder: java.lang.String encodeContent(org.nfctools.ndef.ext.ExternalTypeRecord)>(externalType), 49)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,payload = virtualinvoke $stack31.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack32),49,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, payload = virtualinvoke $stack31.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack32), 49)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,payload = virtualinvoke $stack20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack21),57,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, payload = virtualinvoke $stack20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack21), 57))), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack11 == 0 goto $stack12 = new java.lang.IllegalArgumentException,50,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack13 = new java.lang.StringBuilder,59,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>(), 59))), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: )), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack26 = new org.nfctools.ndef.NdefRecord,62,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, specialinvoke $stack26.<org.nfctools.ndef.NdefRecord: void <init>(byte,byte[],byte[],byte[])>(4, externalTypeUnsupportedRecord#3, $stack28, payload), 62))), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>, 45))), List(Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if $stack7 != 0 goto $stack8 = this.<org.nfctools.ndef.ext.ExternalTypeEncoder: java.util.Map externalRecordTypes>,41,SourceNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10,45,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, config = (org.nfctools.ndef.ext.ExternalTypeRecordConfig) $stack10, 45)) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,if config == null goto $stack11 = externalType instanceof org.nfctools.ndef.ext.UnsupportedExternalTypeRecord,48,SinkNode, path: ) => Node(<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>,$stack32 = <org.nfctools.ndef.NdefConstants: java.nio.charset.Charset DEFAULT_CHARSET>,49,SinkNode, path: (<org.nfctools.ndef.ext.ExternalTypeEncoder: org.nfctools.ndef.NdefRecord encodeRecord(org.nfctools.ndef.Record,org.nfctools.ndef.NdefMessageEncoder)>, payload = virtualinvoke $stack31.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack32), 49)))]
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
