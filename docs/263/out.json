[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>,$stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>(),286,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(data, node), 433) => (<org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(x0, x1), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, $stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>(), 286)) => Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,tag := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke tag.<java.lang.String: int length()>(), 224)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke tag.<java.lang.String: int length()>(), 224) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) SINK=>BASE: Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack5 = "@/",225,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack6 = virtualinvoke $stack5.<java.lang.String: int length()>(), 225)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke tag.<java.lang.String: int length()>(), 224)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke tag.<java.lang.String: int length()>(), 224) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack5 = '@/'",
				"location": {
					"file": "",
					"class": "org.archive.resource.html.ExtractingParseObserver",
					"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
					"line": 225
				},
				"stackTrace": [{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 225
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>()",
				"location": {
					"file": "",
					"class": "org.archive.resource.html.ExtractingParseObserver",
					"method": "<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>",
					"line": 286
				},
				"stackTrace": [{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>",
	"line": 286
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int length()>",
					"line": 623
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@/"),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)) => Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)) => Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)) => Node(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>,$stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr),233,SinkNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)) SINK=>BASE: Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag), 226)) => Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@/"),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)) => Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233) => (<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)) => Node(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),226,SourceNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)) => Node(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>,$stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr),233,SinkNode, path: (<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432) => (<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20) => (<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag)",
				"location": {
					"file": "",
					"class": "org.archive.resource.html.ExtractingParseObserver",
					"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
					"line": 226
				},
				"stackTrace": [{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>",
	"line": 233
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
				"location": {
					"file": "",
					"class": "org.archive.resource.html.ExtractingParseObserver",
					"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
					"line": 226
				},
				"stackTrace": [{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
	"line": 226
},{
	"class": "org.archive.resource.html.ExtractingParseObserver",
	"method": "<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>",
	"line": 233
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr)",
				"location": {
					"file": "",
					"class": "org.archive.resource.html.ExtractingParseObserver",
					"method": "<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>",
					"line": 233
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "87"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr), 87)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = virtualinvoke ob.<java.lang.Object: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack22 = virtualinvoke ob.<java.lang.Object: java.lang.String toString()>(), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 89)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24), 89)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#5 = $stack37",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "99"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#5 = $stack37, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$53807796 = (org.json.JSONException) i#5",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$53807796 = (org.json.JSONException) i#5, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack49 = virtualinvoke tmp$53807796.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack49 = virtualinvoke tmp$53807796.<org.json.JSONException: java.lang.String getMessage()>(), 108)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49), 108)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "sb = $stack3",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, sb = $stack3, 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$292536990 = new org.json.JSONObject",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$292536990.<org.json.JSONObject: void <init>()>(), 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$292536990.<org.json.JSONObject: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$292536990.<org.json.JSONObject: void <init>()>(), 76)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1532711878 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$1532711878 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke tmp$1532711878.<org.json.JSONException: void printStackTrace()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "106"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke tmp$1532711878.<org.json.JSONException: void printStackTrace()>(), 106)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob#6 = $stack50",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "103"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob#6 = $stack50, 103)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$355933666 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$355933666 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack54 = virtualinvoke tmp$355933666.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack54 = virtualinvoke tmp$355933666.<org.json.JSONException: java.lang.String getMessage()>(), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>(), 105)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack56)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack56), 105)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$494956006 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$494956006.<org.json.JSONArray: void <init>()>(), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i#2 = tmp$494956006",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = tmp$494956006, 91)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "92"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 92)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack39 = <java.lang.System: java.io.PrintStream err>",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "101"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack39.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack38), 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack39.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack38)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "101"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack39.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack38), 101)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = newarray (java.lang.String)[4]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>",
  "line": "290"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(data, node), 433)","(<org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack15), 290)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "a := @parameter0: java.lang.String[]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "69"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$494956006 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$494956006.<org.json.JSONArray: void <init>()>(), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i#2 = tmp$494956006",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = tmp$494956006, 91)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke o.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(arr, i#2)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "93"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke o.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(arr, i#2), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "87"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr), 87)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if ob == null goto tmp$494956006 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "88"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = tmp$292536990",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, n = tmp$292536990, 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "95"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 95)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "224"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "sb = $stack3",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, sb = $stack3, 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob#6 = $stack50",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "103"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob#6 = $stack50, 103)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1532711878 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$1532711878 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke tmp$1532711878.<org.json.JSONException: void printStackTrace()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "106"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke tmp$1532711878.<org.json.JSONException: void printStackTrace()>(), 106)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "224"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack48 = <org.archive.resource.html.HTMLMetaData: java.util.logging.Logger LOG>",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49), 108)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49), 108)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>(), 105)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack56)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack56), 105)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "85"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr), 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i#2 != null goto virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "86"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$139762783 = new java.lang.IllegalArgumentException",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "78"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$139762783.<java.lang.IllegalArgumentException: void <init>()>(), 78)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$139762783.<java.lang.IllegalArgumentException: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "78"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$139762783.<java.lang.IllegalArgumentException: void <init>()>(), 78)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$494956006 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$494956006.<org.json.JSONArray: void <init>()>(), 91)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$494956006.<org.json.JSONArray: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$494956006.<org.json.JSONArray: void <init>()>(), 91)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>",
  "line": "286"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(data, node), 433)","(<org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, $stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>(), 286)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "tag := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack38[1] = $stack44",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "102"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack39.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack38), 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack39.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack38)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "101"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack39.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack38), 101)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = tmp$292536990",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, n = tmp$292536990, 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "92"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 92)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack31 = a[$stack30]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "83"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack31 = a[$stack30], 83)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "83"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31), 83)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = $stack7 + $stack8",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack9 = $stack7 + $stack8, 225)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$53807796 = (org.json.JSONException) i#5",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$53807796 = (org.json.JSONException) i#5, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack49 = virtualinvoke tmp$53807796.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack49 = virtualinvoke tmp$53807796.<org.json.JSONException: java.lang.String getMessage()>(), 108)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.util.logging.Logger: void warning(java.lang.String)>($stack49), 108)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$355933666 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$355933666 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack54 = virtualinvoke tmp$355933666.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack54 = virtualinvoke tmp$355933666.<org.json.JSONException: java.lang.String getMessage()>(), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>(), 105)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack56)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack56), 105)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>",
  "line": "286"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(data, node), 433)","(<org.archive.resource.html.ExtractingParseObserver: void access$2100(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addHrefsOnclick(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode)>, $stack10 = virtualinvoke node.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>(), 286)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "tag := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke tag.<java.lang.String: int length()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "224"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke tag.<java.lang.String: int length()>(), 224)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = $stack4 + $stack6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack7 = $stack4 + $stack6, 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = $stack7 + $stack8",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack9 = $stack7 + $stack8, 225)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, $stack14 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>($stack13, attr), 233)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack22 = virtualinvoke ob.<java.lang.Object: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack22 = virtualinvoke ob.<java.lang.Object: java.lang.String toString()>(), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 89)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24), 89)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = tmp$292536990",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, n = tmp$292536990, 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "83"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31), 83)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "85"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr), 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "95"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 95)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = lengthof a",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "77"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack8 = lengthof a, 77)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = $stack8 & 1",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "77"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack9 = $stack8 & 1, 77)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 != 1 goto i = 0",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "77"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = 0",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "82"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$InputTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(data, node, $stack4), 432)","(<org.archive.resource.html.ExtractingParseObserver: void access$2000(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, staticinvoke <org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>(x0, x1, x2), 20)","(<org.archive.resource.html.ExtractingParseObserver: void addBasicHrefs(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,java.lang.String[])>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack11), 233)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack30 = i + 1, 83)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i >= $stack10 goto i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "82"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = lengthof a",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "82"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack10 = lengthof a, 82)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i >= $stack10 goto i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "82"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1078328607 = new org.json.JSONObject",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$1078328607.<org.json.JSONObject: void <init>()>(), 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$1078328607.<org.json.JSONObject: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$1078328607.<org.json.JSONObject: void <init>()>(), 76)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = tmp$1078328607",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, n = tmp$1078328607, 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "95"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 95)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack47[2] = $stack55",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "102"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack47), 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack48.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack47)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "101"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack47), 101)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$695660374 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$695660374.<org.json.JSONArray: void <init>()>(), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i#2 = tmp$695660374",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = tmp$695660374, 91)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke o.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(arr, i#2)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "93"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke o.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(arr, i#2), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob#6 = $stack37",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "103"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob#6 = $stack37, 103)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$430411884 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$430411884 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke tmp$430411884.<org.json.JSONException: void printStackTrace()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "106"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke tmp$430411884.<org.json.JSONException: void printStackTrace()>(), 106)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "sb = $stack3",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, sb = $stack3, 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob#6 = $stack37",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "103"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob#6 = $stack37, 103)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1850322961 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$1850322961 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack41 = virtualinvoke tmp$1850322961.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack41 = virtualinvoke tmp$1850322961.<org.json.JSONException: java.lang.String getMessage()>(), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>(), 105)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack39.<java.io.PrintStream: void println(java.lang.String)>($stack43)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack39.<java.io.PrintStream: void println(java.lang.String)>($stack43), 105)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$430411884 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$430411884 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke tmp$430411884.<org.json.JSONException: void printStackTrace()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "106"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke tmp$430411884.<org.json.JSONException: void printStackTrace()>(), 106)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = $stack8 & 1",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "77"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack9 = $stack8 & 1, 77)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack9 != 1 goto i = 0",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "77"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "85"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr), 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i#2 != null goto virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "86"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = new java.util.ArrayList",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver$AreaTagExtractor",
  "method": "<org.archive.resource.html.ExtractingParseObserver$AreaTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>",
  "line": "339"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AreaTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, specialinvoke $stack12.<java.util.ArrayList: void <init>()>(), 339)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l = $stack12",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver$AreaTagExtractor",
  "method": "<org.archive.resource.html.ExtractingParseObserver$AreaTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>",
  "line": "339"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AreaTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, l = $stack12, 339)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: java.util.List",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l := @parameter0: java.util.List",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = interfaceinvoke l.<java.util.List: int size()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>",
  "line": "47"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)","(<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>, $stack3 = interfaceinvoke l.<java.util.List: int size()>(), 47)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "a = newarray (java.lang.String)[$stack3]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>",
  "line": "47"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>",
  "line": "67"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "a := @parameter0: java.lang.String[]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "69"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "87"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr), 87)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack22 = virtualinvoke ob.<java.lang.Object: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack22 = virtualinvoke ob.<java.lang.Object: java.lang.String toString()>(), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') containing:')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') containing:'), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22), 89)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 89)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24), 89)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1850322961 = (org.json.JSONException) ob#6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$1850322961 = (org.json.JSONException) ob#6, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack41 = virtualinvoke tmp$1850322961.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack41 = virtualinvoke tmp$1850322961.<org.json.JSONException: java.lang.String getMessage()>(), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41), 105)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>(), 105)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack39.<java.io.PrintStream: void println(java.lang.String)>($stack43)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack39.<java.io.PrintStream: void println(java.lang.String)>($stack43), 105)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1541300552 = new java.lang.IllegalArgumentException",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "78"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$1541300552.<java.lang.IllegalArgumentException: void <init>()>(), 78)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$1541300552.<java.lang.IllegalArgumentException: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "78"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$1541300552.<java.lang.IllegalArgumentException: void <init>()>(), 78)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack44 = <org.archive.resource.html.HTMLMetaData: java.util.logging.Logger LOG>",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45), 108)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45), 108)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = interfaceinvoke l.<java.util.List: int size()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>",
  "line": "47"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)","(<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>, $stack3 = interfaceinvoke l.<java.util.List: int size()>(), 47)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "a = newarray (java.lang.String)[$stack3]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>",
  "line": "47"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>",
  "line": "67"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "a := @parameter0: java.lang.String[]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "69"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1095941391 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$1095941391.<java.lang.StringBuilder: void <init>()>(), 105)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$1095941391.<java.lang.StringBuilder: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "105"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$1095941391.<java.lang.StringBuilder: void <init>()>(), 105)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$695660374 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$695660374.<org.json.JSONArray: void <init>()>(), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i#2 = tmp$695660374",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = tmp$695660374, 91)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "92"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 92)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "85"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#2 = virtualinvoke o.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(arr), 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "95"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 95)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1045373696 = (org.json.JSONException) i#5",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$1045373696 = (org.json.JSONException) i#5, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack45 = virtualinvoke tmp$1045373696.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack45 = virtualinvoke tmp$1045373696.<org.json.JSONException: java.lang.String getMessage()>(), 108)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45), 108)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = '@/'",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack6 = virtualinvoke $stack5.<java.lang.String: int length()>(), 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = virtualinvoke $stack5.<java.lang.String: int length()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack6 = virtualinvoke $stack5.<java.lang.String: int length()>(), 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = $stack4 + $stack6",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack7 = $stack4 + $stack6, 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = $stack7 + $stack8",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack9 = $stack7 + $stack8, 225)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack31 = a[$stack30]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "83"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack31 = a[$stack30], 83)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "83"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31), 83)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "224"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "sb = $stack3",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, sb = $stack3, 225)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tag), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = tmp$1078328607",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, n = tmp$1078328607, 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "92"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke i#2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(n), 92)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack47[0] = $stack51",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "101"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack47), 101)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack48.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack47)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "101"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack48.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>('GotErr(%s) JSON(%s)(%s)', $stack47), 101)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "87"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, ob = virtualinvoke o.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>(arr), 87)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if ob == null goto tmp$695660374 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "88"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "224"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "225"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>($stack9), 225)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = tmp$1078328607",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "76"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, n = tmp$1078328607, 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "83"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke n.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($stack32, $stack31), 83)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>",
  "line": "67"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, $stack2 = virtualinvoke this.<org.archive.resource.html.HTMLMetaData: java.lang.String[] LtoA(java.util.List)>(l), 67)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "a := @parameter0: java.lang.String[]",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>",
  "line": "69"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#5 = $stack46",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "99"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, i#5 = $stack46, 99)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1045373696 = (org.json.JSONException) i#5",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "-1"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, tmp$1045373696 = (org.json.JSONException) i#5, -1)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack45 = virtualinvoke tmp$1045373696.<org.json.JSONException: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack45 = virtualinvoke tmp$1045373696.<org.json.JSONException: java.lang.String getMessage()>(), 108)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "108"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack44.<java.util.logging.Logger: void warning(java.lang.String)>($stack45), 108)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$695660374 = new org.json.JSONArray",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$695660374.<org.json.JSONArray: void <init>()>(), 91)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$695660374.<org.json.JSONArray: void <init>()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "91"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, specialinvoke tmp$695660374.<org.json.JSONArray: void <init>()>(), 91)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/')",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@/'), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attr), 226)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, $stack20 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>('A', 'href'), 307)","(<org.archive.resource.html.ExtractingParseObserver: java.lang.String access$1900(java.lang.String,java.lang.String)>, $stack2 = staticinvoke <org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>(x0, x1), 20)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack13",
"location": {
  "file": "",
  "class": "org.archive.resource.html.ExtractingParseObserver",
  "method": "<org.archive.resource.html.ExtractingParseObserver: java.lang.String makePath(java.lang.String,java.lang.String)>",
  "line": "226"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>(), 89)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24)",
"location": {
  "file": "",
  "class": "org.archive.resource.html.HTMLMetaData",
  "method": "<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>",
  "line": "89"
},
"stackTrace": ["(<org.archive.resource.html.ExtractingParseObserver$AnchorTagExtractor: void extract(org.archive.resource.html.HTMLMetaData,org.htmlparser.nodes.TagNode,org.archive.resource.html.ExtractingParseObserver)>, virtualinvoke data.<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>(l), 320)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.util.List)>, virtualinvoke this.<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>($stack2), 67)","(<org.archive.resource.html.HTMLMetaData: void addHref(java.lang.String[])>, specialinvoke this.<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>(this, 'Links', a), 69)","(<org.archive.resource.html.HTMLMetaData: void appendObj2(org.json.JSONObject,java.lang.String,java.lang.String[])>, virtualinvoke $stack18.<java.util.logging.Logger: void warning(java.lang.String)>($stack24), 89)"]
}]
}
}

]
